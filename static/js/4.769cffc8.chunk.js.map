{"version":3,"sources":["pages/Queue/ClipCard.tsx","pages/Queue/ClipRoll.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","pages/Queue/Player.tsx","pages/Queue/QueuePage.tsx"],"names":["ClipCard","id","provider","thumbnailUrl","title","submitter","submitterCount","channel","game","className","src","alt","onClick","selectCurrentClip","removeClip","ClipRoll","clips","clipLimit","length","slice","map","clip","submitters","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","PlayerSwitch","props","undefined","window","location","hostname","height","width","allowFullScreen","startTime","Player","QueuePage","clipQueue","use","clipMem","clipMemory","current","currentClip","token","userName","userChannel","useEffect","TwitchChat","connect","disconnect","nextClip","newChannel","prompt","changeChannel","clearMemory","clearQueue"],"mappings":"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","file":"static/js/4.769cffc8.chunk.js","sourcesContent":["import React from 'react';\nimport { removeClip, selectCurrentClip } from '../../store/queue';\n\nexport interface ClipCardProps {\n  id: string;\n  provider: string;\n  title?: string;\n  submitter?: string;\n  submitterCount?: number;\n  channel?: string;\n  game?: string;\n\n  thumbnailUrl?: string;\n}\n\nfunction ClipCard({ id, provider, thumbnailUrl, title, submitter, submitterCount = 0, channel, game }: ClipCardProps) {\n  return (\n    <div className=\"clip max-w-sm rounded overflow-hidden flex flex-col mb-4\">\n      {thumbnailUrl && <img className=\"w-full\" src={thumbnailUrl} alt={title} />}\n      <div className=\"h-full w-full relative\">\n        <div className=\"absolute flex right-1 bottom-1 clip-buttons space-x-1\">\n          <button className=\"btn-play\" onClick={() => selectCurrentClip({ id, provider })}>\n            &raquo;\n          </button>\n          <button className=\"btn-clear\" onClick={() => removeClip({ id, provider })}>\n            &times;\n          </button>\n        </div>\n        <div className=\"px-2 py-1\">\n          <h4 className=\"font-bold text-sm mb-1\">{title}</h4>\n          <p className=\"text-gray-700 text-xs mb-1 font-normal\">\n            <span className=\"font-bold\">{channel} </span>\n            {game && (\n              <span>\n                playing&nbsp;<span className=\"font-bold\">{game}</span>\n              </span>\n            )}\n          </p>\n          <p className=\"text-gray-700 text-xs font-normal\">\n            {submitter && (\n              <>\n                Submitted by <span className=\"font-bold\">{submitter}</span>\n              </>\n            )}\n            <span className=\"text-xs\">{submitterCount > 0 && ' +' + submitterCount}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ClipCard;\n","import React from 'react';\nimport ClipCard from './ClipCard';\n\nexport interface ClipRollProps {\n  clips: any[];\n  clipLimit?: number;\n}\n\nfunction ClipRoll({ clips, clipLimit = 19 }: ClipRollProps) {\n  return (\n    <div className=\"cliproll flex flex-wrap w-full justify-between\">\n      {clips.length ? (\n        <>\n          {clips.slice(0, clipLimit).map((clip) => (\n            <ClipCard key={`${clip.provider}:${clip.id}`} {...clip} submitterCount={clip.submitters?.length} />\n          ))}\n          {clips.length > clipLimit && (\n            <div className=\"clip max-w-sm rounded overflow-hidden ml-3 mb-3 text-3xl flex\">\n              <div className=\"mx-auto my-auto\">+{clips.length - clipLimit}</div>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className=\"pl-3 text-lg font-bold\">Waiting for some clips from chat...</div>\n      )}\n    </div>\n  );\n}\n\nexport default ClipRoll;\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\n\nexport interface PlayerProps {\n  title?: string;\n  provider?: string;\n  id?: string;\n  channel?: string;\n  game?: string;\n  submitter?: string;\n  submitterCount?: number;\n  startTime?: string;\n}\n\nfunction Player(props: PlayerProps) {\n  const { game, channel, title, submitter, submitterCount = 0 } = props;\n  return (\n    <>\n      <div className=\"player\">\n        <PlayerSwitch {...props} />\n      </div>\n      <div className=\"pt-2\">\n        <h2 className=\"font-bold mb-1\">{title ?? <>&nbsp;</>}</h2>\n        <p className=\"text-gray-500 text-sm font-normal\">\n          {channel ? (\n            <>\n              <span className=\"font-bold\">{channel}</span>\n              {game && (\n                <span>\n                  &nbsp;playing&nbsp;<span className=\"font-bold\">{game}</span>\n                </span>\n              )}\n              , submitted by <span className=\"font-bold\">{submitter}</span>\n              {submitterCount > 0 && <> and {submitterCount} other(s)</>}\n            </>\n          ) : (\n            <>&nbsp;</>\n          )}\n        </p>\n      </div>\n    </>\n  );\n}\n\nfunction PlayerSwitch({ provider, ...props }: PlayerProps) {\n  switch (provider) {\n    case undefined:\n      return <></>;\n    case 'twitch-clip':\n      return (\n        <iframe\n          src={`https://clips.twitch.tv/embed?clip=${props.id}&autoplay=true&parent=${window.location.hostname}`}\n          height=\"100%\"\n          width=\"100%\"\n          allowFullScreen={true}\n          title={props.title}\n        ></iframe>\n      );\n    case 'youtube':\n      return (\n        <iframe\n          src={`https://www.youtube.com/embed/${props.id}?autoplay=1&start=${props.startTime ?? ''}`}\n          height=\"100%\"\n          width=\"100%\"\n          allowFullScreen={true}\n          title={props.title}\n        ></iframe>\n      );\n  }\n\n  return <span>Provider not supported: {provider}</span>;\n}\n\nexport default Player;\n","import React, { useEffect } from 'react';\r\nimport TwitchChat from '../../services/TwitchChat';\r\nimport { clearMemory, clearQueue, clipMemory, clipQueue, currentClip, nextClip } from '../../store/queue';\r\nimport { changeChannel, userChannel, userName } from '../../store/user';\r\nimport ClipRoll from './ClipRoll';\r\nimport Player from './Player';\r\nimport './styles.css';\r\n\r\nfunction QueuePage() {\r\n  const clips = clipQueue.use();\r\n  const clipMem = clipMemory.use();\r\n  const current = currentClip.use();\r\n\r\n  const token = userName.use();\r\n  const channel = userChannel.use();\r\n\r\n  useEffect(() => {\r\n    TwitchChat.connect();\r\n\r\n    return () => TwitchChat.disconnect();\r\n  }, [token]);\r\n\r\n  return (\r\n    <>\r\n      <Player {...current} submitterCount={current.submitters?.length} />\r\n      <div className=\"my-4 flex w-full\">\r\n        <button className=\"mr-2 btn btn-play\" onClick={() => nextClip()}>\r\n          Next &raquo;\r\n        </button>\r\n\r\n        <div className=\"flex-grow\" />\r\n\r\n        <button\r\n          className=\"mr-2 btn btn-skip\"\r\n          onClick={() => {\r\n            const newChannel = prompt('Enter channel to read chat from', channel as string);\r\n            if (newChannel && newChannel !== channel) {\r\n              changeChannel(newChannel);\r\n            }\r\n          }}\r\n        >\r\n          Change channel ({channel})\r\n        </button>\r\n        <button className=\"mr-2 btn btn-clear\" onClick={() => clearMemory()}>\r\n          &times; Purge memory ({clipMem.length})\r\n        </button>\r\n        <button className=\"mr-2 btn btn-clear\" onClick={() => clearQueue()}>\r\n          &times; Clear queue ({clips.length})\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ClipRoll clips={clips} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QueuePage;\r\n"],"sourceRoot":""}