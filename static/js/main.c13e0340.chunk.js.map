{"version":3,"sources":["store/user.ts","components/ForkMeOnGithub.tsx","pages/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","common/analytics.ts","services/TwitchAuth.ts","common/logging.ts","common/utils.ts","services/TwitchApi.ts","store/dictionaries.ts","services/providers/twitch-clip.ts","services/providers/twitch-vod.ts","services/YoutubeApi.ts","services/providers/youtube.ts","services/ClipFinder.ts","services/TwitchChat.ts","common/commands.ts","store/queue.ts","store/helpers.ts"],"names":["isLoggedIn","createState","accessToken","idToken","userName","userChannel","createPersistentState","logIn","auth","id","username","set","get","trace","toLowerCase","Date","getDay","currentClip","title","channel","provider","thumbnailUrl","submitter","displayName","submitters","Array","game","logOut","a","token","TwitchAuth","revokeToken","changeChannel","TwitchChat","leaveChannel","joinChannel","ForkMeOnGithub","href","target","rel","className","xmlns","width","height","viewBox","fill","d","style","WebkitTransformOrigin","transformOrigin","Router","BrowserRouter","HashRouter","HomePage","React","lazy","QueuePage","Routes","loggedIn","useState","fallback","basename","process","path","to","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","processAuth","ReactDOM","render","StrictMode","document","getElementById","logger","createLogger","umami","window","eventQueue","value","type","debug","push","e","shift","trackView","trackEvent","TWITCH_CLIENT_ID","getLoginUrl","encodeURI","redirectToLogin","location","assign","hash","authInfo","substring","split","reduce","s","parts","decodeURIComponent","access_token","id_token","decodedIdToken","base64","replace","jsonPayload","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","parseJwt","preferred_username","axios","post","LogLevel","globalLogLevel","setLogLevel","level","info","ConsoleLogger","name","message","data","this","log","warn","error","messageWithName","console","__setLogLevel","getUrlFromMessage","urlStart","indexOf","urlEnd","undefined","TwitchApiClient","create","baseURL","headers","TwitchApi","getClip","Authorization","getVideo","getGame","gamesDictionary","getGameName","dict","canHandle","url","uri","URL","hostname","endsWith","pathname","includes","tryGetClip","idStart","lastIndexOf","fromMemory","getMemorizedClip","clipInfo","broadcaster_name","game_id","thumbnail_url","created_at","videoUrl","timestamp","TwitchClipProvider","user_name","startTime","searchParams","TwitchVodProvider","YoutubeApi","author_name","providers","ClipFinder","findByUrl","clip","now","client","commands","queuenext","nextClip","queueclose","acceptClips","queueopen","queueclear","clearQueue","queuepurgememory","clearMemory","queueautoplay","val","toggleAutoplay","queuesoftlimit","limit","Number","isInteger","setSoftClipLimit","handleTimeout","clipQueue","filter","some","forEach","length","memory","clipMemory","find","same","none","disconnect","connect","Client","options","skipUpdatingEmotesets","skipMembership","bind","identity","password","connection","reconnect","secure","on","reason","_channel","userstate","self","startsWith","mod","badges","substr","commandName","args","command","acceptingClips","addClip","handleMessage","_username","removeClip","handleMessageDeleted","catch","setTimeout","part","softClipLimit","softClipCount","autoplay","useReactPlayer","queuedState","queued","queue","sort","b","uncount","stringify","Math","max","selectCurrentClip","getQueuedClip","index","findIndex","accept","reloadClip","ap","initialValue","state","attach","Persistence"],"mappings":"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","file":"static/js/main.c13e0340.chunk.js","sourcesContent":["import { createState } from \"@hookstate/core\";\nimport { trace } from \"../common/analytics\";\nimport TwitchAuth from \"../services/TwitchAuth\";\nimport TwitchChat from \"../services/TwitchChat\";\nimport { createPersistentState } from \"./helpers\";\nimport { currentClip } from \"./queue\";\n\nexport const isLoggedIn = createState<boolean>(false);\n\nexport const accessToken = createState<string | null>(null);\nexport const idToken = createState<string | null>(null);\n\nexport const userName = createState<string | null>(null);\nexport const userChannel = createPersistentState<string | null>('userChannel', null);\n\nexport const logIn = (auth: string, id: string, username: string): void => {\n  accessToken.set(auth);\n  idToken.set(id);\n  userName.set(username);\n\n  if (!userChannel.get()) {\n    userChannel.set(username);\n  }\n\n  isLoggedIn.set(true);\n\n  trace('user-logged-in');\n\n  // temp easter egg\n  if (username.toLowerCase() === 'wolfabelle' && (new Date()).getDay() === 5) {\n    currentClip.set({\n      title: 'ITS FRIDAY THEN, ITS SATURDAY, SUNDAY! GO MUFASA!',\n      channel: 'MUFASA',\n      id: '1TewCPi92ro',\n      provider: 'youtube',\n      thumbnailUrl: 'https://i.ytimg.com/vi/1TewCPi92ro/hqdefault.jpg',\n      submitter: { displayName: 'Friday', userName: '' },\n      submitters: new Array(69420),\n      game: 'Friday',\n    })\n  }\n  //\n}\n\nexport const logOut = async (): Promise<void> => {\n  const token = accessToken.get();\n  accessToken.set(null);\n  idToken.set(null);\n  userName.set(null);\n  isLoggedIn.set(false);\n\n  if (token) {\n    await TwitchAuth.revokeToken(token);\n  }\n\n  trace('user-logged-out');\n}\n\nexport const changeChannel = (channel: string) => {\n  TwitchChat.leaveChannel(userChannel.get() as string);\n  userChannel.set(channel);\n  TwitchChat.joinChannel(channel);\n\n  trace('channel-changed');\n};\n","import React from 'react';\n\ninterface ForkMeOnGithubProps {\n  href: string;\n}\n\nfunction ForkMeOnGithub({ href }: ForkMeOnGithubProps) {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\" title=\"Fork me on GitHub\" className=\"opacity-40 hover:opacity-75\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"52\"\n        height=\"52\"\n        viewBox=\"0 0 250 250\"\n        className=\"absolute top-0 right-0\"\n        fill=\"#1f2937\"\n      >\n        <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill=\"#000\" />\n        <path\n          d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n          style={{ WebkitTransformOrigin: '130px 106px', transformOrigin: '130px 106px' }}\n        />\n        <path d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n      </svg>\n    </a>\n  );\n}\n\nexport default ForkMeOnGithub;\n","import { useState } from '@hookstate/core';\nimport React from 'react';\nimport { Suspense } from 'react';\nimport { BrowserRouter, HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../store/user';\n\nlet Router = BrowserRouter;\nif (process.env.REACT_APP_USE_HASHROUTER === 'true') {\n\tRouter = HashRouter;\n}\n\nconst HomePage = React.lazy(() => import('./Home/HomePage'));\nconst QueuePage = React.lazy(() => import('./Queue/QueuePage'));\n\nfunction Routes() {\n  const loggedIn = useState(isLoggedIn).get();\n\n  return (\n    <Suspense fallback={<div></div>}>\n      <Router basename={process.env.REACT_APP_BASEPATH}>\n        <Switch>\n          <Route path=\"/queue\">\n            {loggedIn ? <QueuePage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact={true} path=\"/\">\n            {!loggedIn ? <HomePage /> : <Redirect to=\"/queue\" />}\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ForkMeOnGithub from './components/ForkMeOnGithub';\nimport Routes from './pages/Routes';\n\n\nfunction App() {\n  return (\n    <>\n      <ForkMeOnGithub href=\"https://github.com/JakeMiki/twitch-clip-queue\" />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport TwitchAuth from \"./services/TwitchAuth\";\n\nTwitchAuth.processAuth();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createLogger } from \"./logging\";\n\nconst logger = createLogger('Umami Event');\n\nconst umami = (window as any).umami;\nconst eventQueue: { type: string; value: string; }[] = [];\n\nexport function trace(value: string, type = 'custom') {\n  logger.debug(`${type}: ${value}`);\n\n  try {\n    eventQueue.push({ type, value });\n\n    if (umami) {\n      let e;\n\n      // eslint-disable-next-line\n      while (e = eventQueue.shift()) {\n        if (e.type === 'view') {\n          umami.trackView(`${process.env.REACT_APP_BASEPATH}${e.value}`);\n        } else {\n          umami.trackEvent(e.value, e.type);\n        }\n      }\n    }\n  } catch {}\n}\n","import axios from 'axios';\r\nimport { AuthInfo, IdToken } from '../models';\r\nimport { logIn } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\nconst TWITCH_REDIRECT_URI = process.env.REACT_APP_TWITCH_REDIRECT_URI;\r\n\r\nconst getLoginUrl = (): string => {\r\n  return encodeURI(\r\n    `https://id.twitch.tv/oauth2/authorize?client_id=${TWITCH_CLIENT_ID}` +\r\n      `&redirect_uri=${TWITCH_REDIRECT_URI}` +\r\n      `&response_type=token id_token` +\r\n      `&scope=openid chat:read` +\r\n      `&claims={\"id_token\":{\"preferred_username\":null}}`\r\n  );\r\n};\r\n\r\nconst redirectToLogin = (): void => {\r\n  window.location.assign(getLoginUrl());\r\n};\r\n\r\nconst processAuth = (): void => {\r\n  if (!window.location.hash) {\r\n    return;\r\n  }\r\n\r\n  const authInfo = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((authInfo, s) => {\r\n      const parts = s.split('=');\r\n      authInfo[parts[0]] = decodeURIComponent(decodeURIComponent(parts[1]));\r\n      return authInfo;\r\n    }, {} as Record<string, any>) as AuthInfo;\r\n\r\n  window.location.hash = '';\r\n\r\n  if (authInfo.access_token && authInfo.id_token) {\r\n    authInfo.decodedIdToken = parseJwt(authInfo.id_token) as IdToken;\r\n\r\n    logIn(authInfo.access_token, authInfo.id_token, authInfo.decodedIdToken?.preferred_username ?? '');\r\n  }\r\n};\r\n\r\nconst revokeToken = async (token: string): Promise<void> => {\r\n  await axios.post(`https://id.twitch.tv/oauth2/revoke?client_id=${TWITCH_CLIENT_ID}&token=${token}`);\r\n};\r\n\r\nfunction parseJwt(token: string) {\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\nconst TwitchAuth = {\r\n  getLoginUrl,\r\n  redirectToLogin,\r\n  processAuth,\r\n  revokeToken,\r\n};\r\n\r\nexport default TwitchAuth;\r\n","\nenum LogLevel {\n  debug = 0,\n  info,\n  warn,\n  error,\n};\n\ntype LogLevels = keyof typeof LogLevel;\n\ntype LoggingFunction = (message: any, ...data: any[]) => void;\ninterface Logger {\n  debug: LoggingFunction;\n  info: LoggingFunction;\n  warn: LoggingFunction;\n  error: LoggingFunction;\n}\n\nlet globalLogLevel: LogLevel;\n\nconst setLogLevel = (level: LogLevels) => globalLogLevel = LogLevel[level] ?? LogLevel.info;\n\nclass ConsoleLogger implements Logger {\n  constructor(private name: string) {}\n\n  public debug(message: any, ...data: any[]): void {\n    this.log(LogLevel.debug, message, ...data);\n  }\n\n  public info(message: any, ...data: any[]): void {\n    this.log(LogLevel.info, message, ...data);\n  }\n\n  public warn(message: any, ...data: any[]): void {\n    this.log(LogLevel.warn, message, ...data);\n  }\n\n  public error(message: any, ...data: any[]): void {\n    this.log(LogLevel.error, message, ...data);\n  }\n\n  protected log(level: LogLevel, message: any, ...data: any[]): void {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    const messageWithName = `[${this.name}] ${message}`;\n\n    switch (level) {\n      case LogLevel.debug:\n        console.debug(messageWithName, ...data);\n        break;\n      case LogLevel.info:\n        console.info(messageWithName, ...data);\n        break;\n      case LogLevel.warn:\n        console.warn(messageWithName, ...data);\n        break;\n      case LogLevel.error:\n        console.error(messageWithName, ...data);\n        break;\n    }\n  }\n}\n\nsetLogLevel((process.env.REACT_APP_LOG_LEVEL) as LogLevels);\n(window as any).__setLogLevel = setLogLevel;\n\nexport function createLogger(name: string): Logger {\n  return new ConsoleLogger(name);\n}\n","export const getUrlFromMessage = (message: string) => {\n\n  const urlStart = message.indexOf('http');\n  if (urlStart >= 0) {\n    const urlEnd = message.indexOf(' ', urlStart);\n    const url = message.slice(urlStart, urlEnd > 0 ? urlEnd : undefined);\n    return url;\n  }\n\n  return undefined;\n};\n","import axios from 'axios';\r\nimport { TwitchClip, TwitchGame, TwitchVideo } from '../models';\r\nimport { accessToken } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\n\r\nconst TwitchApiClient = axios.create({\r\n  baseURL: 'https://api.twitch.tv/helix/',\r\n  headers: {\r\n    'Client-ID': TWITCH_CLIENT_ID,\r\n  },\r\n});\r\n\r\nconst getClip = async (id: string): Promise<TwitchClip> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchClip[] }>(`clips?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getVideo = async (id: string): Promise<TwitchVideo> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchVideo[] }>(`videos?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getGame = async (id: string): Promise<TwitchGame> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchGame[] }>(`games?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst TwitchApi = {\r\n  getClip,\r\n  getVideo,\r\n  getGame,\r\n};\r\n\r\nexport default TwitchApi;\r\n","import TwitchApi from \"../services/TwitchApi\";\r\nimport { createPersistentState } from \"./helpers\";\r\n\r\nconst gamesDictionary = createPersistentState('gamesDictionary', {} as Record<string, string>);\r\n\r\nexport const getGameName = async (id: string): Promise<string> => {\r\n  const dict = gamesDictionary.get();\r\n  if (dict[id]) {\r\n    return dict[id];\r\n  }\r\n\r\n  const game = await TwitchApi.getGame(id);\r\n\r\n  if (game) {\r\n    gamesDictionary.set(d => ({ ...d, [id]: game.name }));\r\n    return game.name;\r\n  }\r\n\r\n  return '';\r\n};\r\n","import { Clip, Provider } from '../../models';\nimport { getGameName } from '../../store/dictionaries';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'clips.twitch.tv') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/clip/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n\n    const fromMemory = getMemorizedClip({\n      provider: 'twitch-clip',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getClip(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.broadcaster_name,\n        game: await getGameName(clipInfo.game_id),\n        provider: 'twitch-clip',\n        thumbnailUrl: clipInfo.thumbnail_url,\n        videoUrl: clipInfo.thumbnail_url.split('-preview-')[0] + '.mp4',\n        title: clipInfo.title,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch {}\n};\n\nconst TwitchClipProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default TwitchClipProvider;\n","import { Clip, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/videos/')) {\n      return true;\n    }\n    if (uri.pathname.includes('/video/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n\n    const fromMemory = getMemorizedClip({\n      provider: 'twitch-vod',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getVideo(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.user_name,\n        provider: 'twitch-vod',\n        thumbnailUrl: clipInfo.thumbnail_url.replace('%{width}x%{height}', '480x272'),\n        title: clipInfo.title,\n        startTime: uri.searchParams.get('t') ?? undefined,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch {}\n};\n\nconst TwitchVodProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default TwitchVodProvider;\n","import axios from 'axios';\r\n\r\nconst getClip = async (id: string): Promise<any> => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://www.youtube.com/oembed?format=json&url=https://www.youtube.com/watch?v=${id}`\r\n    );\r\n    return data;\r\n  } catch {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst YoutubeApi = {\r\n  getClip,\r\n};\r\n\r\nexport default YoutubeApi;\r\n","import { Clip, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport YoutubeApi from '../YoutubeApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'youtu.be') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('youtube.com')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    let id: string | undefined = undefined;\n    if (uri.hostname === 'youtu.be') {\n      const idStart = uri.pathname.lastIndexOf('/') + 1;\n      id = uri.pathname.slice(idStart).split('?')[0];\n    } else if (uri.hostname.endsWith('youtube.com')) {\n      id = uri.searchParams.get('v') ?? undefined;\n    }\n\n    if (!id) {\n      return;\n    }\n\n    const startTime = uri.searchParams.get('t') ?? undefined;\n\n    const fromMemory = getMemorizedClip({\n      provider: 'youtube',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await YoutubeApi.getClip(id);\n\n    return {\n      id,\n      channel: clipInfo?.author_name ?? 'YouTube',\n      thumbnailUrl: clipInfo?.thumbnail_url ?? `https://i.ytimg.com/vi/${id}/hqdefault.jpg`,\n      provider: 'youtube',\n      title: clipInfo?.title ?? id,\n      startTime: startTime?.replace(/[^0-9]/g, ''),\n    };\n  } catch {}\n};\n\nconst YouTubeProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default YouTubeProvider;\n","import { Clip } from '../models';\nimport TwitchClipProvider from './providers/twitch-clip';\nimport TwitchVodProvider from './providers/twitch-vod';\nimport YouTubeProvider from './providers/youtube';\n\nconst providers = [TwitchClipProvider, TwitchVodProvider, YouTubeProvider];\n\nconst findByUrl = async (url: string): Promise<Clip | undefined> => {\n  for (const provider of providers) {\n    if (!provider.canHandle(url)) {\n      continue;\n    }\n\n    const clip = await provider.tryGetClip(url);\n\n    if (clip) {\n      clip.hash = Date.now().toString();\n      return clip;\n    }\n  }\n\n  return undefined;\n};\n\nconst ClipFinder = {\n  findByUrl,\n};\n\nexport default ClipFinder;\n","import { createLogger } from '../common/logging';\nimport { getUrlFromMessage } from '../common/utils';\nimport { acceptingClips, addClip, clipMemory, clipQueue, removeClip } from '../store/queue';\nimport { accessToken, userChannel, userName } from '../store/user';\nimport { Client, Userstate } from 'tmi.js';\nimport ClipFinder from './ClipFinder';\nimport { none } from '@hookstate/core';\nimport { commands } from '../common/commands';\nimport { same } from '../store/helpers';\n\nconst logger = createLogger('Twitch Chat');\nlet client: Client;\n\nconst handleMessage = (userstate: Userstate, message: string, self: boolean) => {\n  logger.debug('Userstate', userstate);\n  if (message.startsWith('!')) {\n    if (!userstate.mod && userstate.badges?.['broadcaster'] !== '1') {\n      return;\n    }\n\n    const [commandName, ...args] = message.substr(1).split(' ');\n\n    const command = commands[commandName];\n    if (!command) {\n      return;\n    }\n\n    command(...args);\n  }\n\n  if (!acceptingClips.get() && !self) {\n    return;\n  }\n\n  const url = getUrlFromMessage(message);\n\n  if (url) {\n    logger.debug('[handleMessage] Found url:', url);\n\n    ClipFinder.findByUrl(url).then((clip) => {\n      if (clip) {\n        clip.url = url;\n        clip.submitter = {\n          userName: userstate.username,\n          displayName: userstate['display-name'],\n        };\n        addClip(clip);\n      }\n    });\n  }\n};\n\nconst handleMessageDeleted = (message: string) => {\n  const url = getUrlFromMessage(message);\n\n  if (url) {\n    logger.debug('[handleMessageDeleted] Found url:', url);\n\n    ClipFinder.findByUrl(url).then((clip) => {\n      if (clip) {\n        removeClip(clip);\n      }\n    });\n  }\n};\n\nconst handleTimeout = (username: string) => {\n  const clipsFromUser = clipQueue.filter(\n    (clip) => clip.submitter.get()?.userName === username || clip.submitters.get()?.some((s) => s.userName === username)\n  );\n\n  clipsFromUser.forEach((clip) => {\n    if (clip.submitter.get()?.userName === username) {\n      if (!clip.submitters.get()?.length) {\n        const memory = clipMemory.find((c) => same(c.get(), clip.get()));\n        memory?.set(none);\n        clip.set(none);\n      } else {\n        clip.submitter.set(clip.submitters.get()?.[0]);\n        clip.submitters.set((submitters) => {\n          submitters?.shift();\n          return submitters;\n        });\n      }\n    } else {\n      clip.submitters.set((submitters) => submitters?.filter((s) => s.userName !== username));\n    }\n  });\n};\n\nconst connect = () => {\n  client = new Client({\n    options: {\n      debug: process.env.REACT_APP_LOG_LEVEL === 'debug',\n      skipUpdatingEmotesets: true,\n      skipMembership: true,\n    } as any,\n    logger: {\n      error: logger.error.bind(logger),\n      info: logger.info.bind(logger),\n      warn: logger.warn.bind(logger),\n    },\n    identity: {\n      username: userName.get() as string,\n      password: `oauth:${accessToken.get()}`,\n    },\n    connection: {\n      reconnect: true,\n      secure: true,\n    },\n  });\n\n  client.on('disconnected', (reason) => logger.info('Disconnected:', reason));\n  client.on('message', (_channel, userstate, message, self) => handleMessage(userstate, message, self));\n  client.on('messagedeleted', (_channel, _username, message) => handleMessageDeleted(message));\n  client.on('timeout', (_channel, username) => handleTimeout(username));\n  client.on('ban', (_channel, username) => handleTimeout(username));\n\n  logger.info('Connecting and authenticating...');\n  client\n    .connect()\n    .then(() => {\n      logger.info('Connected.');\n      joinChannel(userChannel.get() ?? userName.get() ?? '');\n    })\n    .catch((error) => {\n      logger.error(error);\n      setTimeout(() => connect(), 5000);\n    });\n};\n\nconst disconnect = async () => {\n  await client?.disconnect();\n};\n\nconst joinChannel = async (channel: string) => {\n  logger.info('Joining channel', channel);\n  await client.join(channel.toLowerCase());\n};\n\nconst leaveChannel = async (channel: string) => {\n  logger.info('Leaving channel', channel);\n  await client.part(channel.toLowerCase());\n};\n\nconst TwitchChat = {\n  connect,\n  disconnect,\n  joinChannel,\n  leaveChannel,\n};\n\nexport default TwitchChat;\n","import { acceptClips, clearMemory, clearQueue, nextClip, setSoftClipLimit, toggleAutoplay } from '../store/queue';\n\nexport const commands: Record<string, (...args: string[]) => void> = {\n  queuenext: () => nextClip(),\n  queueclose: () => acceptClips(false),\n  queueopen: () => acceptClips(true),\n  queueclear: () => clearQueue(),\n  queuepurgememory: () => clearMemory(),\n  queueautoplay: (val) =>\n    toggleAutoplay(['1', 'on', 'true'].includes(val) ? true : ['0', 'off', 'false'].includes(val) ? false : undefined),\n  queuesoftlimit: (limit) => limit !== null && Number.isInteger(+limit) && setSoftClipLimit(+limit),\n};\n","import { createState, none } from '@hookstate/core';\nimport { trace } from '../common/analytics';\nimport { Clip, ClipSubmitter } from '../models';\nimport { createPersistentState, same } from './helpers';\n\nexport const currentClip = createState({} as Clip);\nexport const clipQueue = createPersistentState('clipQueue', [] as Clip[]);\nexport const clipMemory = createPersistentState('clipMemory', [] as Clip[]);\nexport const acceptingClips = createState(false);\nexport const softClipLimit = createPersistentState('softClipLimit', 0);\nexport const softClipCount = createState(0);\nexport const autoplay = createPersistentState('autoplay', false);\nexport const useReactPlayer = createState(false);\n\nexport const addClip = (clip: Clip): void => {\n  const queuedState = clipQueue.find((c) => same(c.get(), clip));\n  const queued = queuedState?.get();\n  const limit = softClipLimit.get();\n\n  if (queued) {\n    const sameSubmitter =\n      queued.submitter?.userName === clip.submitter?.userName ||\n      (queued.submitters?.find((s) => s.userName === clip.submitter?.userName) ?? false);\n\n    if (!sameSubmitter) {\n      queuedState?.submitters.set((submitters) => [...(submitters ?? []), clip.submitter as ClipSubmitter]);\n      clipQueue.set((queue) => queue.sort((a, b) => (b.submitters?.length ?? 0) - (a.submitters?.length ?? 0)));\n    }\n\n    return;\n  } else if (limit && softClipCount.get() >= limit) {\n    return;\n  } else if (getMemorizedClip(clip)) {\n    return;\n  }\n\n  clipMemory.set((memory) => [...(memory ?? []), clip]);\n  clipQueue.set((queue) => [...(queue ?? []), clip]);\n  softClipCount.set((c) => c + 1);\n\n  trace('clip-added');\n};\n\nexport const nextClip = (uncount = false): void => {\n  currentClip.set(JSON.parse(JSON.stringify(clipQueue[0]?.get() ?? {})));\n  clipQueue[0].set(none);\n\n  if (uncount) {\n    softClipCount.set((c) => Math.max(c - 1, 0));\n  }\n\n  useReactPlayer.set(autoplay.get());\n\n  trace('next-clip');\n  trace('?visit-time-extender', 'view');\n};\n\nexport const getMemorizedClip = (clip: Clip): Clip | undefined => {\n  const memory = clipMemory.find((c) => same(c.get(), clip));\n  return memory?.get();\n};\n\nexport const getQueuedClip = (clip: Clip): Clip | undefined => {\n  const queue = clipQueue.find((c) => same(c.get(), clip));\n  return queue?.get();\n};\n\nexport const selectCurrentClip = (clip: Clip): void => {\n  const queued = getQueuedClip(clip);\n  if (queued) {\n    useReactPlayer.set(autoplay.get());\n    currentClip.set(JSON.parse(JSON.stringify(queued)));\n    removeClip(queued);\n  }\n};\n\nexport const removeClip = (clip: Clip): void => {\n  const index = clipQueue.findIndex((c) => same(c.get(), clip));\n  clipQueue[index].set(none);\n  softClipCount.set((c) => Math.max(c - 1, 0));\n};\n\nexport const clearQueue = (): void => {\n  clipQueue.set([]);\n  currentClip.set({});\n  softClipCount.set(0);\n\n  trace('clear-queue');\n};\n\nexport const clearMemory = (): void => {\n  clipMemory.set([...(clipQueue.get() ?? [])]);\n\n  trace('purge-memory');\n};\n\nexport const acceptClips = (accept: boolean): void => {\n  acceptingClips.set(accept);\n  if (accept) {\n    softClipCount.set(clipQueue.length);\n  }\n\n  trace(`accept-clips-${accept}`);\n};\n\nexport const reloadClip = (): void => {\n  currentClip.hash.set(() => Date.now().toString());\n};\n\nexport const setSoftClipLimit = (limit: number): void => {\n  softClipLimit.set(limit);\n\n  trace('set-soft-limit');\n};\n\nexport const toggleAutoplay = (ap?: boolean): void => {\n  ap = ap ?? !autoplay.get();\n  autoplay.set(ap);\n\n  if (ap) {\n    useReactPlayer.set(true);\n  }\n\n  trace(`toggle-autoplay-${ap}`);\n};\n","import { createState, State } from '@hookstate/core';\r\nimport { Persistence } from '@hookstate/persistence';\r\nimport { Clip } from '../models';\r\n\r\nexport function createPersistentState<TState>(\r\n  name: string,\r\n  initialValue: TState\r\n): State<TState> {\r\n  const state = createState(initialValue);\r\n  state.attach(Persistence(name))\r\n  return state;\r\n}\r\n\r\nexport function same(a: Clip, b: Clip) {\r\n  return a.id === b.id && a.provider === b.provider;\r\n}\r\n"],"sourceRoot":""}