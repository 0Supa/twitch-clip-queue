{"version":3,"sources":["common/logging.ts","components/ForkMeOnGithub.tsx","pages/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","common/analytics.ts","services/TwitchApi.ts","store/dictionaries.ts","services/providers/twitch-clip.ts","services/providers/twitch-vod.ts","services/YoutubeApi.ts","services/providers/youtube.ts","services/StreamableApi.ts","services/providers/streamable.ts","services/ClipFinder.ts","services/TwitchAuth.ts","common/utils.ts","services/TwitchChat.ts","common/commands.ts","store/queue.ts","store/user.ts","store/helpers.ts"],"names":["LogLevel","globalLogLevel","setLogLevel","level","info","ConsoleLogger","name","message","data","this","log","debug","warn","error","messageWithName","console","createLogger","process","window","__setLogLevel","ForkMeOnGithub","href","target","rel","title","className","xmlns","width","height","viewBox","fill","d","style","WebkitTransformOrigin","transformOrigin","HomePage","React","lazy","QueuePage","Routes","loggedIn","useState","isLoggedIn","get","fallback","basename","path","to","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TwitchAuth","processAuth","ReactDOM","render","StrictMode","document","getElementById","logger","umami","eventQueue","trace","value","type","push","e","shift","trackView","trackEvent","TwitchApiClient","axios","create","baseURL","headers","TwitchApi","getClip","id","a","Authorization","accessToken","getVideo","getGame","gamesDictionary","createPersistentState","getGameName","dict","game","set","providerName","canHandle","url","uri","URL","hostname","endsWith","pathname","includes","tryGetClip","getInfo","fromMemory","getMemorizedClip","provider","clipInfo","broadcaster_name","game_id","thumbnail_url","split","created_at","channel","thumbnailUrl","videoUrl","timestamp","idStart","lastIndexOf","slice","TwitchClipProvider","startTime","user_name","replace","searchParams","TwitchVodProvider","YoutubeApi","undefined","author_name","YouTubeProvider","StreamableApi","StreamableProvider","enabledProviders","providers","filter","ClipFinder","findByUrl","userChannel","clip","hash","Date","now","toString","getInfoByUrl","TWITCH_CLIENT_ID","getLoginUrl","encodeURI","redirectToLogin","location","assign","authInfo","substring","reduce","s","parts","decodeURIComponent","access_token","id_token","decodedIdToken","token","base64","jsonPayload","atob","map","c","charCodeAt","join","JSON","parse","parseJwt","logIn","preferred_username","revokeToken","post","getUrlFromMessage","urlStart","indexOf","urlEnd","client","commands","queuenext","nextClip","queueclose","acceptClips","queueopen","queueclear","clearQueue","queuepurgememory","clearMemory","queueautoplay","val","toggleAutoplay","queuesoftlimit","limit","Number","isInteger","setSoftClipLimit","queueremove","startsWith","removeClip","handleTimeout","username","clipQueue","submitter","userName","submitters","some","forEach","length","memory","clipMemory","find","same","none","disconnect","joinChannel","toLowerCase","TwitchChat","connect","Client","options","skipUpdatingEmotesets","skipMembership","bind","identity","password","connection","reconnect","secure","on","reason","_channel","userstate","self","mod","badges","substr","commandName","args","command","acceptingClips","displayName","addClip","handleMessage","_username","handleMessageDeleted","catch","setTimeout","leaveChannel","part","currentClip","createState","softClipLimit","softClipCount","autoplay","useReactPlayer","autoplayTimeoutHandle","addClipToMemory","stringify","queuedState","queued","queue","sort","b","uncount","next","Math","max","cancelDelayedNextClip","selectCurrentClip","getQueuedClip","index","findIndex","accept","reloadClip","ap","delayedNextClip","timeoutHandle","clearTimeout","idToken","auth","currentDate","getDay","Array","getDate","getMonth","logOut","changeChannel","initialValue","state","attach","Persistence"],"mappings":"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","file":"static/js/main.233df09d.chunk.js","sourcesContent":["\nenum LogLevel {\n  debug = 0,\n  info,\n  warn,\n  error,\n};\n\ntype LogLevels = keyof typeof LogLevel;\n\ntype LoggingFunction = (message: any, ...data: any[]) => void;\ninterface Logger {\n  debug: LoggingFunction;\n  info: LoggingFunction;\n  warn: LoggingFunction;\n  error: LoggingFunction;\n}\n\nlet globalLogLevel: LogLevel;\n\nconst setLogLevel = (level: LogLevels) => globalLogLevel = LogLevel[level] ?? LogLevel.info;\n\nclass ConsoleLogger implements Logger {\n  constructor(private name: string) {}\n\n  public debug(message: any, ...data: any[]): void {\n    this.log(LogLevel.debug, message, ...data);\n  }\n\n  public info(message: any, ...data: any[]): void {\n    this.log(LogLevel.info, message, ...data);\n  }\n\n  public warn(message: any, ...data: any[]): void {\n    this.log(LogLevel.warn, message, ...data);\n  }\n\n  public error(message: any, ...data: any[]): void {\n    this.log(LogLevel.error, message, ...data);\n  }\n\n  protected log(level: LogLevel, message: any, ...data: any[]): void {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    const messageWithName = `[${this.name}] ${message}`;\n\n    switch (level) {\n      case LogLevel.debug:\n        console.debug(messageWithName, ...data);\n        break;\n      case LogLevel.info:\n        console.info(messageWithName, ...data);\n        break;\n      case LogLevel.warn:\n        console.warn(messageWithName, ...data);\n        break;\n      case LogLevel.error:\n        console.error(messageWithName, ...data);\n        break;\n    }\n  }\n}\n\nsetLogLevel((process.env.REACT_APP_LOG_LEVEL) as LogLevels);\n(window as any).__setLogLevel = setLogLevel;\n\nexport function createLogger(name: string): Logger {\n  return new ConsoleLogger(name);\n}\n","import React from 'react';\r\n\r\ninterface ForkMeOnGithubProps {\r\n  href: string;\r\n}\r\n\r\nfunction ForkMeOnGithub({ href }: ForkMeOnGithubProps) {\r\n  return (\r\n    <a href={href} target=\"_blank\" rel=\"noreferrer\" title=\"Fork me on GitHub\" className=\"opacity-40 hover:opacity-75\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"52\"\r\n        height=\"52\"\r\n        viewBox=\"0 0 250 250\"\r\n        className=\"absolute top-0 right-0\"\r\n        fill=\"#1f2937\"\r\n      >\r\n        <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill=\"#000\" />\r\n        <path\r\n          d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\r\n          style={{ WebkitTransformOrigin: '130px 106px', transformOrigin: '130px 106px' }}\r\n        />\r\n        <path d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\r\n      </svg>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default ForkMeOnGithub;\r\n","import { useState } from '@hookstate/core';\nimport React from 'react';\nimport { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../store/user';\n\nconst HomePage = React.lazy(() => import('./Home/HomePage'));\nconst QueuePage = React.lazy(() => import('./Queue/QueuePage'));\n\nfunction Routes() {\n  const loggedIn = useState(isLoggedIn).get();\n\n  return (\n    <Suspense fallback={<div></div>}>\n      <Router basename={process.env.REACT_APP_BASEPATH}>\n        <Switch>\n          <Route path=\"/queue\">\n            {loggedIn ? <QueuePage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact={true} path=\"/\">\n            {!loggedIn ? <HomePage /> : <Redirect to=\"/queue\" />}\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\r\nimport ForkMeOnGithub from './components/ForkMeOnGithub';\r\nimport Routes from './pages/Routes';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ForkMeOnGithub href=\"https://github.com/JakeMiki/twitch-clip-queue\" />\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport TwitchAuth from \"./services/TwitchAuth\";\r\n\r\nTwitchAuth.processAuth();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { createLogger } from \"./logging\";\n\nconst logger = createLogger('Umami Event');\n\nconst umami = (window as any).umami;\nconst eventQueue: { type: string; value: string; }[] = [];\n\nexport function trace(value: string, type = 'custom') {\n  logger.debug(`${type}: ${value}`);\n\n  try {\n    eventQueue.push({ type, value });\n\n    if (umami) {\n      let e;\n\n      // eslint-disable-next-line\n      while (e = eventQueue.shift()) {\n        if (e.type === 'view') {\n          umami.trackView(`${process.env.REACT_APP_BASEPATH}${e.value}`);\n        } else {\n          umami.trackEvent(e.value, e.type);\n        }\n      }\n    }\n  } catch {}\n}\n","import axios from 'axios';\r\nimport { TwitchClip, TwitchGame, TwitchVideo } from '../models';\r\nimport { accessToken } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\n\r\nconst TwitchApiClient = axios.create({\r\n  baseURL: 'https://api.twitch.tv/helix/',\r\n  headers: {\r\n    'Client-ID': TWITCH_CLIENT_ID,\r\n  },\r\n});\r\n\r\nconst getClip = async (id: string): Promise<TwitchClip> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchClip[] }>(`clips?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getVideo = async (id: string): Promise<TwitchVideo> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchVideo[] }>(`videos?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getGame = async (id: string): Promise<TwitchGame> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchGame[] }>(`games?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst TwitchApi = {\r\n  getClip,\r\n  getVideo,\r\n  getGame,\r\n};\r\n\r\nexport default TwitchApi;\r\n","import TwitchApi from \"../services/TwitchApi\";\r\nimport { createPersistentState } from \"./helpers\";\r\n\r\nconst gamesDictionary = createPersistentState('gamesDictionary', {} as Record<string, string>);\r\n\r\nexport const getGameName = async (id: string): Promise<string> => {\r\n  const dict = gamesDictionary.get();\r\n  if (dict[id]) {\r\n    return dict[id];\r\n  }\r\n\r\n  const game = await TwitchApi.getGame(id);\r\n\r\n  if (game) {\r\n    gamesDictionary.set(d => ({ ...d, [id]: game.name }));\r\n    return game.name;\r\n  }\r\n\r\n  return '';\r\n};\r\n","import { createLogger } from '../../common/logging';\nimport { Clip, ClipInfo, Provider } from '../../models';\nimport { getGameName } from '../../store/dictionaries';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst providerName = 'twitch-clip';\nconst logger = createLogger(`${providerName} provider`);\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'clips.twitch.tv') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/clip/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const { id } = getInfo(url) ?? {};\n\n    if (!id) {\n      return;\n    }\n\n    const fromMemory = getMemorizedClip({\n      provider: providerName,\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getClip(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.broadcaster_name,\n        game: await getGameName(clipInfo.game_id),\n        provider: providerName,\n        thumbnailUrl: clipInfo.thumbnail_url,\n        videoUrl: clipInfo.thumbnail_url.split('-preview-')[0] + '.mp4',\n        title: clipInfo.title,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch(e) {\n    logger.error('tryGetClip', e);\n  }\n};\n\nconst getInfo = (url: string): ClipInfo | undefined => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return undefined;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n\n    return {\n      id,\n      provider: providerName,\n    }\n  } catch(e) {\n    logger.error('getInfo', e);\n  }\n};\n\nconst TwitchClipProvider: Provider = {\n  canHandle,\n  tryGetClip,\n  getInfo,\n  name: providerName,\n};\n\nexport default TwitchClipProvider;\n","import { createLogger } from '../../common/logging';\nimport { Clip, ClipInfo, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst providerName = 'twitch-vod';\nconst logger = createLogger(`${providerName} provider`);\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/videos/')) {\n      return true;\n    }\n    if (uri.pathname.includes('/video/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const { id, startTime } = getInfo(url) ?? {};\n\n    if (!id) {\n      return;\n    }\n\n    const fromMemory = getMemorizedClip({\n      provider: providerName,\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getVideo(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.user_name,\n        provider: providerName,\n        thumbnailUrl: clipInfo.thumbnail_url.replace('%{width}x%{height}', '480x272'),\n        title: clipInfo.title,\n        startTime: startTime,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch (e) {\n    logger.error('tryGetClip', e);\n  }\n};\n\nconst getInfo = (url: string): ClipInfo | undefined => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return undefined;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n    const startTime = uri.searchParams.get('t');\n\n    if (!startTime) {\n      return undefined;\n    }\n\n    return {\n      id,\n      provider: providerName,\n      startTime,\n    };\n  } catch (e) {\n    logger.error('getInfo', e);\n  }\n};\n\nconst TwitchVodProvider: Provider = {\n  canHandle,\n  tryGetClip,\n  getInfo,\n  name: providerName,\n};\n\nexport default TwitchVodProvider;\n","import axios from 'axios';\nimport { OEmbedVideoResponse } from '../models';\n\nconst getClip = async (id: string): Promise<OEmbedVideoResponse | undefined> => {\n  try {\n    const { data } = await axios.get(\n      `https://www.youtube.com/oembed?format=json&url=https://www.youtube.com/watch?v=${id}`\n    );\n    return data;\n  } catch {\n    return undefined;\n  }\n};\n\nconst YoutubeApi = {\n  getClip,\n};\n\nexport default YoutubeApi;\n","import { createLogger } from '../../common/logging';\nimport { Clip, ClipInfo, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport YoutubeApi from '../YoutubeApi';\n\nconst providerName = 'youtube';\nconst logger = createLogger(`${providerName} provider`);\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'youtu.be') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('youtube.com')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const { id, startTime } = getInfo(url) ?? {};\n\n    if (!id) {\n      return;\n    }\n\n    const fromMemory = getMemorizedClip({\n      provider: providerName,\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await YoutubeApi.getClip(id);\n\n    return {\n      id,\n      channel: clipInfo?.author_name ?? 'YouTube',\n      thumbnailUrl: clipInfo?.thumbnail_url ?? `https://i.ytimg.com/vi/${id}/hqdefault.jpg`,\n      provider: providerName,\n      title: clipInfo?.title ?? id,\n      startTime,\n    };\n  } catch (e) {\n    logger.error('tryGetClip', e);\n  }\n};\n\nconst getInfo = (url: string): ClipInfo | undefined => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return undefined;\n    }\n\n    let id: string | undefined = undefined;\n    if (uri.hostname === 'youtu.be' || uri.pathname.includes('shorts')) {\n      const idStart = uri.pathname.lastIndexOf('/') + 1;\n      id = uri.pathname.slice(idStart).split('?')[0];\n    } else if (uri.hostname.endsWith('youtube.com')) {\n      id = uri.searchParams.get('v') ?? undefined;\n    }\n\n    if (!id) {\n      return undefined;\n    }\n\n    const startTime = uri.searchParams.get('t') ?? undefined;\n\n    return {\n      id,\n      provider: providerName,\n      startTime,\n    };\n  } catch (e) {\n    logger.error('getInfo', e);\n  }\n};\n\nconst YouTubeProvider: Provider = {\n  canHandle,\n  tryGetClip,\n  getInfo,\n  name: providerName,\n};\n\nexport default YouTubeProvider;\n","import axios from 'axios';\nimport { OEmbedVideoResponse } from '../models';\n\nconst getClip = async (id: string): Promise<OEmbedVideoResponse | undefined> => {\n  try {\n    const { data } = await axios.get(`https://api.streamable.com/oembed.json?url=https://streamable.com/${id}`);\n    return data;\n  } catch {\n    return undefined;\n  }\n};\n\nconst StreamableApi = {\n  getClip,\n};\n\nexport default StreamableApi;\n","import { createLogger } from '../../common/logging';\nimport { Clip, ClipInfo, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport StreamableApi from '../StreamableApi';\n\nconst providerName = 'streamable';\nconst logger = createLogger(`${providerName} provider`);\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname.endsWith('streamable.com')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const { id, startTime } = getInfo(url) ?? {};\n\n    if (!id) {\n      return;\n    }\n\n    const fromMemory = getMemorizedClip({\n      provider: providerName,\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await StreamableApi.getClip(id);\n\n    return {\n      id,\n      channel: clipInfo?.author_name ?? 'Streamable',\n      thumbnailUrl: clipInfo?.thumbnail_url,\n      provider: providerName,\n      title: clipInfo?.title ?? id,\n      startTime,\n    };\n  } catch (e) {\n    logger.error('tryGetClip', e);\n  }\n};\n\nconst getInfo = (url: string): ClipInfo | undefined => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return undefined;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/') + 1;\n    let id = uri.pathname.slice(idStart).split('?')[0];\n\n    if (!id) {\n      return undefined;\n    }\n\n    return {\n      id,\n      provider: providerName,\n    };\n  } catch (e) {\n    logger.error('getInfo', e);\n  }\n};\n\nconst StreamableProvider: Provider = {\n  canHandle,\n  tryGetClip,\n  getInfo,\n  name: providerName,\n};\n\nexport default StreamableProvider;\n","import { Clip, ClipInfo } from '../models';\nimport TwitchClipProvider from './providers/twitch-clip';\nimport TwitchVodProvider from './providers/twitch-vod';\nimport YouTubeProvider from './providers/youtube';\nimport StreamableProvider from './providers/streamable';\nimport { createLogger } from '../common/logging';\nimport { userChannel } from '../store/user';\n\nconst logger = createLogger('Clip Finder');\n\nconst enabledProviders = process.env.REACT_APP_CLIP_PROVIDERS?.split(',');\nconst providers = [TwitchClipProvider, TwitchVodProvider, YouTubeProvider, StreamableProvider].filter((provider) =>\n  enabledProviders?.includes(provider.name)\n);\n\nlogger.debug('Enabled providers:', enabledProviders);\n\nconst findByUrl = async (url: string): Promise<Clip | undefined> => {\n  for (const provider of providers) {\n    if (userChannel.value === 'wolfabelle' && provider.name === YouTubeProvider.name) {\n      continue;\n    }\n\n    if (!provider.canHandle(url)) {\n      continue;\n    }\n\n    const clip = await provider.tryGetClip(url);\n\n    if (clip) {\n      clip.hash = Date.now().toString();\n      return clip;\n    }\n  }\n\n  return undefined;\n};\n\nconst getInfoByUrl = (url: string): ClipInfo | undefined => {\n  for (const provider of providers) {\n    if (userChannel.value === 'wolfabelle' && provider.name === YouTubeProvider.name) {\n      continue;\n    }\n\n    const clipInfo = provider.getInfo(url);\n\n    if (clipInfo) {\n      return clipInfo;\n    }\n  }\n\n  return undefined;\n};\n\nconst ClipFinder = {\n  findByUrl,\n  getInfoByUrl,\n};\n\nexport default ClipFinder;\n","import axios from 'axios';\r\nimport { AuthInfo, IdToken } from '../models';\r\nimport { logIn } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\nconst TWITCH_REDIRECT_URI = process.env.REACT_APP_TWITCH_REDIRECT_URI;\r\n\r\nconst getLoginUrl = (): string => {\r\n  return encodeURI(\r\n    `https://id.twitch.tv/oauth2/authorize?client_id=${TWITCH_CLIENT_ID}` +\r\n      `&redirect_uri=${TWITCH_REDIRECT_URI}` +\r\n      `&response_type=token id_token` +\r\n      `&scope=openid chat:read` +\r\n      `&claims={\"id_token\":{\"preferred_username\":null}}`\r\n  );\r\n};\r\n\r\nconst redirectToLogin = (): void => {\r\n  window.location.assign(getLoginUrl());\r\n};\r\n\r\nconst processAuth = (): void => {\r\n  if (!window.location.hash) {\r\n    return;\r\n  }\r\n\r\n  const authInfo = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((authInfo, s) => {\r\n      const parts = s.split('=');\r\n      authInfo[parts[0]] = decodeURIComponent(decodeURIComponent(parts[1]));\r\n      return authInfo;\r\n    }, {} as Record<string, any>) as AuthInfo;\r\n\r\n  window.location.hash = '';\r\n\r\n  if (authInfo.access_token && authInfo.id_token) {\r\n    authInfo.decodedIdToken = parseJwt(authInfo.id_token) as IdToken;\r\n\r\n    logIn(authInfo.access_token, authInfo.id_token, authInfo.decodedIdToken?.preferred_username ?? '');\r\n  }\r\n};\r\n\r\nconst revokeToken = async (token: string): Promise<void> => {\r\n  await axios.post(`https://id.twitch.tv/oauth2/revoke?client_id=${TWITCH_CLIENT_ID}&token=${token}`);\r\n};\r\n\r\nfunction parseJwt(token: string) {\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\nconst TwitchAuth = {\r\n  getLoginUrl,\r\n  redirectToLogin,\r\n  processAuth,\r\n  revokeToken,\r\n};\r\n\r\nexport default TwitchAuth;\r\n","export const getUrlFromMessage = (message: string) => {\n\n  const urlStart = message.indexOf('http');\n  if (urlStart >= 0) {\n    const urlEnd = message.indexOf(' ', urlStart);\n    const url = message.slice(urlStart, urlEnd > 0 ? urlEnd : undefined);\n    return url;\n  }\n\n  return undefined;\n};\n","import { createLogger } from '../common/logging';\r\nimport { getUrlFromMessage } from '../common/utils';\r\nimport { acceptingClips, addClip, clipMemory, clipQueue, removeClip } from '../store/queue';\r\nimport { accessToken, userChannel, userName } from '../store/user';\r\nimport { Client, Userstate } from 'tmi.js';\r\nimport ClipFinder from './ClipFinder';\r\nimport { none } from '@hookstate/core';\r\nimport { commands } from '../common/commands';\r\nimport { same } from '../store/helpers';\r\n\r\nconst logger = createLogger('Twitch Chat');\r\nlet client: Client;\r\n\r\nconst handleMessage = (userstate: Userstate, message: string, self: boolean) => {\r\n  if (message.startsWith('!')) {\r\n    logger.debug('Userstate', userstate);\r\n    if (!userstate.mod && userstate.badges?.['broadcaster'] !== '1') {\r\n      return;\r\n    }\r\n\r\n    const [commandName, ...args] = message.substr(1).split(' ');\r\n\r\n    const command = commands[commandName];\r\n    if (!command) {\r\n      return;\r\n    }\r\n\r\n    command(...args);\r\n    return;\r\n  }\r\n\r\n  if (!acceptingClips.get() && !self) {\r\n    return;\r\n  }\r\n\r\n  const url = getUrlFromMessage(message);\r\n\r\n  if (url) {\r\n    logger.debug('[handleMessage] Found url:', url);\r\n\r\n    ClipFinder.findByUrl(url).then((clip) => {\r\n      if (clip) {\r\n        clip.url = url;\r\n        clip.submitter = {\r\n          userName: userstate.username,\r\n          displayName: userstate['display-name'],\r\n        };\r\n        addClip(clip);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst handleMessageDeleted = (message: string) => {\r\n  const url = getUrlFromMessage(message);\r\n\r\n  if (url) {\r\n    logger.debug('[handleMessageDeleted] Found url:', url);\r\n\r\n    ClipFinder.findByUrl(url).then((clip) => {\r\n      if (clip) {\r\n        removeClip(clip);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst handleTimeout = (username: string) => {\r\n  const clipsFromUser = clipQueue.filter(\r\n    (clip) => clip.submitter.get()?.userName === username || clip.submitters.get()?.some((s) => s.userName === username)\r\n  );\r\n\r\n  clipsFromUser.forEach((clip) => {\r\n    if (clip.submitter.get()?.userName === username) {\r\n      if (!clip.submitters.get()?.length) {\r\n        const memory = clipMemory.find((c) => same(c.get(), clip.get()));\r\n        memory?.set(none);\r\n        clip.set(none);\r\n      } else {\r\n        clip.submitter.set(clip.submitters.get()?.[0]);\r\n        clip.submitters.set((submitters) => {\r\n          submitters?.shift();\r\n          return submitters;\r\n        });\r\n      }\r\n    } else {\r\n      clip.submitters.set((submitters) => submitters?.filter((s) => s.userName !== username));\r\n    }\r\n  });\r\n};\r\n\r\nconst connect = () => {\r\n  client = new Client({\r\n    options: {\r\n      debug: process.env.REACT_APP_LOG_LEVEL === 'debug',\r\n      skipUpdatingEmotesets: true,\r\n      skipMembership: true,\r\n    } as any,\r\n    logger: {\r\n      error: logger.error.bind(logger),\r\n      info: logger.info.bind(logger),\r\n      warn: logger.warn.bind(logger),\r\n    },\r\n    identity: {\r\n      username: userName.get() as string,\r\n      password: `oauth:${accessToken.get()}`,\r\n    },\r\n    connection: {\r\n      reconnect: true,\r\n      secure: true,\r\n    },\r\n  });\r\n\r\n  client.on('disconnected', (reason) => logger.info('Disconnected:', reason));\r\n  client.on('message', (_channel, userstate, message, self) => handleMessage(userstate, message, self));\r\n  client.on('messagedeleted', (_channel, _username, message) => handleMessageDeleted(message));\r\n  client.on('timeout', (_channel, username) => handleTimeout(username));\r\n  client.on('ban', (_channel, username) => handleTimeout(username));\r\n\r\n  logger.info('Connecting and authenticating...');\r\n  client\r\n    .connect()\r\n    .then(() => {\r\n      logger.info('Connected.');\r\n      joinChannel(userChannel.get() ?? userName.get() ?? '');\r\n    })\r\n    .catch((error) => {\r\n      logger.error(error);\r\n      setTimeout(() => connect(), 5000);\r\n    });\r\n};\r\n\r\nconst disconnect = async () => {\r\n  await client?.disconnect();\r\n};\r\n\r\nconst joinChannel = async (channel: string) => {\r\n  logger.info('Joining channel', channel);\r\n  await client.join(channel.toLowerCase());\r\n};\r\n\r\nconst leaveChannel = async (channel: string) => {\r\n  logger.info('Leaving channel', channel);\r\n  await client.part(channel.toLowerCase());\r\n};\r\n\r\nconst TwitchChat = {\r\n  connect,\r\n  disconnect,\r\n  joinChannel,\r\n  leaveChannel,\r\n};\r\n\r\nexport default TwitchChat;\r\n","import ClipFinder from '../services/ClipFinder';\r\nimport { acceptClips, clearMemory, clearQueue, nextClip, removeClip, setSoftClipLimit, toggleAutoplay } from '../store/queue';\r\n\r\nconst queueremove: (url: string) => void = (url) => {\r\n  if (!url) {\r\n    return;\r\n  }\r\n\r\n  if (url.startsWith('http')) {\r\n    const clipInfo = ClipFinder.getInfoByUrl(url);\r\n    if (clipInfo) {\r\n      removeClip(clipInfo);\r\n    }\r\n  }\r\n};\r\n\r\nexport const commands: Record<string, (...args: string[]) => void> = {\r\n  queuenext: () => nextClip(),\r\n  queueclose: () => acceptClips(false),\r\n  queueopen: () => acceptClips(true),\r\n  queueclear: () => clearQueue(),\r\n  queuepurgememory: () => clearMemory(),\r\n  queueautoplay: (val) =>\r\n    toggleAutoplay(['1', 'on', 'true'].includes(val) ? true : ['0', 'off', 'false'].includes(val) ? false : undefined),\r\n  queuesoftlimit: (limit) => limit !== null && Number.isInteger(+limit) && setSoftClipLimit(+limit),\r\n  queueremove,\r\n};\r\n","import { createState, none } from '@hookstate/core';\nimport { trace } from '../common/analytics';\nimport { Clip, ClipInfo, ClipSubmitter } from '../models';\nimport { createPersistentState, same } from './helpers';\n\nexport const currentClip = createState({} as Clip);\nexport const clipQueue = createPersistentState('clipQueue', [] as Clip[]);\nexport const clipMemory = createPersistentState('clipMemory', [] as Clip[]);\nexport const acceptingClips = createState(false);\nexport const softClipLimit = createPersistentState('softClipLimit', 0);\nexport const softClipCount = createState(0);\nexport const autoplay = createPersistentState('autoplay', false);\nexport const useReactPlayer = createState(false);\nexport const autoplayTimeoutHandle = createState(-1);\n\nconst addClipToMemory = (clip: Clip): void => {\n  if (clip) {\n    clipMemory.set((memory) => [JSON.parse(JSON.stringify(clip)), ...(memory ?? [])]);\n  }\n}\n\nexport const addClip = (clip: Clip): void => {\n  const queuedState = clipQueue.find((c) => same(c.get(), clip));\n  const queued = queuedState?.get();\n  const limit = softClipLimit.get();\n\n  if (queued) {\n    const sameSubmitter =\n      queued.submitter?.userName === clip.submitter?.userName ||\n      (queued.submitters?.find((s) => s.userName === clip.submitter?.userName) ?? false);\n\n    if (!sameSubmitter) {\n      queuedState?.submitters.set((submitters) => [...(submitters ?? []), clip.submitter as ClipSubmitter]);\n      clipQueue.set((queue) => queue.sort((a, b) => (b.submitters?.length ?? 0) - (a.submitters?.length ?? 0)));\n    }\n\n    return;\n  } else if (limit && softClipCount.get() >= limit) {\n    return;\n  } else if (getMemorizedClip(clip)) {\n    return;\n  }\n\n  clipQueue.set((queue) => [...(queue ?? []), clip]);\n  softClipCount.set((c) => c + 1);\n\n  trace('clip-added');\n};\n\nexport const nextClip = (uncount = false): void => {\n  const next = clipQueue[0]?.get();\n  currentClip.set(JSON.parse(JSON.stringify(next ?? {})));\n  addClipToMemory(next);\n  clipQueue[0].set(none);\n\n  if (uncount) {\n    softClipCount.set((c) => Math.max(c - 1, 0));\n  }\n\n  useReactPlayer.set(autoplay.get());\n  cancelDelayedNextClip();\n\n  if (next) {\n    trace('next-clip');\n    trace('?visit-time-extender', 'view');\n  }\n};\n\nexport const getMemorizedClip = (clip: ClipInfo): Clip | undefined => {\n  const queue = clipQueue.find((c) => same(c.get(), clip));\n  if (queue) {\n    return queue?.get();\n  }\n  const memory = clipMemory.find((c) => same(c.get(), clip));\n  if (memory) {\n    return memory?.get();\n  }\n  return undefined;\n};\n\nexport const getQueuedClip = (clip: ClipInfo): Clip | undefined => {\n  const queue = clipQueue.find((c) => same(c.get(), clip));\n  return queue?.get();\n};\n\nexport const selectCurrentClip = (clip: Clip): void => {\n  const queued = getQueuedClip(clip);\n  if (queued) {\n    useReactPlayer.set(autoplay.get());\n    currentClip.set(JSON.parse(JSON.stringify(queued)));\n    removeClip(queued);\n  }\n};\n\nexport const removeClip = (clip: ClipInfo): void => {\n  const index = clipQueue.findIndex((c) => same(c.get(), clip));\n  addClipToMemory(clipQueue[index].get());\n  clipQueue[index].set(none);\n  softClipCount.set((c) => Math.max(c - 1, 0));\n};\n\nexport const clearQueue = (): void => {\n  clipQueue.set([]);\n  currentClip.set({});\n  softClipCount.set(0);\n\n  trace('clear-queue');\n};\n\nexport const clearMemory = (): void => {\n  clipMemory.set([]);\n\n  trace('purge-memory');\n};\n\nexport const acceptClips = (accept: boolean): void => {\n  acceptingClips.set(accept);\n  if (accept) {\n    softClipCount.set(clipQueue.length);\n  }\n\n  trace(`accept-clips-${accept}`);\n};\n\nexport const reloadClip = (): void => {\n  currentClip.hash.set(() => Date.now().toString());\n};\n\nexport const setSoftClipLimit = (limit: number): void => {\n  softClipLimit.set(limit);\n\n  trace('set-soft-limit');\n};\n\nexport const toggleAutoplay = (ap?: boolean): void => {\n  ap = ap ?? !autoplay.get();\n  autoplay.set(ap);\n\n  if (ap) {\n    useReactPlayer.set(true);\n  } else {\n    cancelDelayedNextClip();\n  }\n\n  trace(`toggle-autoplay-${ap}`);\n};\n\nexport const delayedNextClip = (): void => {\n  cancelDelayedNextClip();\n\n  const timeoutHandle = setTimeout(() => nextClip(), 1000) as unknown as number;\n  autoplayTimeoutHandle.set(timeoutHandle);\n};\n\nexport const cancelDelayedNextClip = (): void => {\n  let timeoutHandle = autoplayTimeoutHandle.get();\n  if (timeoutHandle) {\n    clearTimeout(timeoutHandle);\n  }\n};\n","import { createState } from \"@hookstate/core\";\nimport { trace } from \"../common/analytics\";\nimport TwitchAuth from \"../services/TwitchAuth\";\nimport TwitchChat from \"../services/TwitchChat\";\nimport { createPersistentState } from \"./helpers\";\nimport { currentClip } from \"./queue\";\n\nexport const isLoggedIn = createState<boolean>(false);\n\nexport const accessToken = createState<string | null>(null);\nexport const idToken = createState<string | null>(null);\n\nexport const userName = createState<string | null>(null);\nexport const userChannel = createPersistentState<string | null>('userChannel', null);\n\nexport const logIn = (auth: string, id: string, username: string): void => {\n  accessToken.set(auth);\n  idToken.set(id);\n  userName.set(username);\n\n  let channel = userChannel.get();\n\n  if (!channel) {\n    userChannel.set(username);\n    channel = username;\n  }\n\n  isLoggedIn.set(true);\n\n  trace('user-logged-in');\n\n  // temp easter egg\n  if (channel?.toLowerCase() === 'wolfabelle') {\n    const currentDate = new Date();\n    if (currentDate.getDay() === 5) {\n      currentClip.set({\n        title: 'ITS FRIDAY THEN, ITS SATURDAY, SUNDAY! GO MUFASA!',\n        channel: 'MUFASA',\n        id: '1TewCPi92ro',\n        provider: 'youtube',\n        thumbnailUrl: 'https://i.ytimg.com/vi/1TewCPi92ro/hqdefault.jpg',\n        submitter: { displayName: 'Friday', userName: '' },\n        submitters: new Array(69420),\n        game: 'Friday',\n      })\n    }\n    if (currentDate.getDate() === 18 && currentDate.getMonth() === 3) {\n      currentClip.set({\n        title: `HAPPY BIRTHDAY BELLE! 🎂🎉🎉`,\n        channel: 'FeelsBirthdayMan Clap @Wolfabelle',\n        id: 'reLU2dEWnVU',\n        provider: 'youtube',\n        thumbnailUrl: 'https://i.ytimg.com/vi/reLU2dEWnVU/hqdefault.jpg',\n        submitter: { displayName: 'all of chat and their mums', userName: '' },\n        submitters: [],\n      })\n    }\n  }\n  //\n}\n\nexport const logOut = async (): Promise<void> => {\n  const token = accessToken.get();\n  accessToken.set(null);\n  idToken.set(null);\n  userName.set(null);\n  isLoggedIn.set(false);\n\n  if (token) {\n    await TwitchAuth.revokeToken(token);\n  }\n\n  trace('user-logged-out');\n}\n\nexport const changeChannel = (channel: string) => {\n  TwitchChat.leaveChannel(userChannel.get() as string);\n  userChannel.set(channel);\n  TwitchChat.joinChannel(channel);\n\n  trace('channel-changed');\n};\n","import { createState, State } from '@hookstate/core';\r\nimport { Persistence } from '@hookstate/persistence';\r\nimport { ClipInfo } from '../models';\r\n\r\nexport function createPersistentState<TState>(\r\n  name: string,\r\n  initialValue: TState\r\n): State<TState> {\r\n  const state = createState(initialValue);\r\n  state.attach(Persistence(name))\r\n  return state;\r\n}\r\n\r\nexport function same(a: ClipInfo, b: ClipInfo) {\r\n  return a.id === b.id && a.provider === b.provider;\r\n}\r\n"],"sourceRoot":""}