{"version":3,"sources":["store/user.ts","store/helpers.ts","store/queue.ts","services/TwitchAuth.ts","components/Button.tsx","services/TwitchApi.ts","store/dictionaries.ts","services/providers/twitch-clip.ts","services/YoutubeApi.ts","services/providers/youtube.ts","services/ClipFinder.ts","services/TwitchChat.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isLoggedIn","entity","accessToken","idToken","userName","userChannel","logIn","auth","id","username","set","logOut","a","token","get","TwitchAuth","revokeToken","changeChannel","channel","TwitchChat","leaveChannel","joinChannel","createEntity","name","initialValue","persistence","same","b","provider","currentClip","clipQueue","clipMemory","acceptingClips","addClip","clip","queued","getQueuedClip","submitter","submitters","includes","newQueued","queue","map","c","sort","length","getMemorizedClip","memory","nextClip","next","shift","find","undefined","selectCurrentClip","removeClip","filter","clearQueue","clearMemory","acceptClips","accept","TWITCH_CLIENT_ID","process","getLoginUrl","encodeURI","redirectToLogin","window","location","assign","processAuth","hash","authInfo","substring","split","reduce","s","parts","decodeURIComponent","access_token","id_token","decodedIdToken","base64","replace","jsonPayload","atob","charCodeAt","toString","slice","join","JSON","parse","parseJwt","preferred_username","axios","post","addButtonColour","colour","classes","Button","className","children","onClick","props","TwitchApiClient","create","baseURL","headers","TwitchApi","getClip","Authorization","data","getGame","gamesDictionary","getGameName","dict","game","d","canHandle","url","uri","URL","hostname","endsWith","pathname","tryGetClip","idStart","lastIndexOf","fromMemory","clipInfo","broadcaster_name","game_id","thumbnail_url","title","thumbnailUrl","TwitchClipProvider","YoutubeApi","searchParams","startTime","author_name","providers","findByUrl","u","console","log","socket","ClipFinder","send","message","connect","WebSocket","onopen","readyState","onclose","onerror","error","warn","onmessage","startsWith","raw","tagEnd","indexOf","userEnd","commandEnd","tags","t","user","command","channelEnd","messageStart","trim","parseMessage","urlStart","urlEnd","then","disconnect","close","HomePage","React","lazy","QueuePage","App","loggedIn","use","fallback","basename","exact","path","to","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cb06544.chunk.js","sourcesContent":["import { entity } from \"simpler-state\";\r\nimport TwitchAuth from \"../services/TwitchAuth\";\r\nimport TwitchChat from \"../services/TwitchChat\";\r\n\r\nexport const isLoggedIn = entity<boolean>(false);\r\n\r\nexport const accessToken = entity<string | null>(null);\r\nexport const idToken = entity<string | null>(null);\r\n\r\nexport const userName = entity<string | null>(null);\r\nexport const userChannel = entity<string | null>(null);\r\n\r\nexport const logIn = (auth: string, id: string, username: string): void => {\r\n  accessToken.set(auth);\r\n  idToken.set(id);\r\n  userName.set(username);\r\n  userChannel.set(username);\r\n  isLoggedIn.set(true);\r\n}\r\n\r\nexport const logOut = async (): Promise<void> => {\r\n  const token = accessToken.get();\r\n  accessToken.set(null);\r\n  idToken.set(null);\r\n  userName.set(null);\r\n  userChannel.set(null);\r\n  isLoggedIn.set(false);\r\n  if (token) {\r\n    await TwitchAuth.revokeToken(token);\r\n  }\r\n}\r\n\r\nexport const changeChannel = (channel: string) => {\r\n  TwitchChat.leaveChannel(userChannel.get() as string);\r\n  userChannel.set(channel);\r\n  TwitchChat.joinChannel(channel);\r\n};\r\n","import { Entity, entity, persistence } from 'simpler-state';\r\nimport { Clip } from '../models';\r\n\r\nexport function createEntity<TEntity>(\r\n  name: string,\r\n  initialValue: TEntity\r\n): Entity<TEntity> {\r\n  return entity(initialValue, [persistence(name)]);\r\n}\r\n\r\nexport function createAsyncEntity<TEntity>(\r\n  name: string,\r\n  initialValue: Promise<TEntity>\r\n): Entity<TEntity | undefined> {\r\n  return entity(initialValue, [persistence(name)]);\r\n}\r\n\r\nexport function same(a: Clip, b: Clip) {\r\n  return a.id === b.id && a.provider === b.provider;\r\n}\r\n","import { entity } from 'simpler-state';\nimport { Clip } from '../models';\nimport { createEntity, same } from './helpers';\n\nexport const currentClip = createEntity('currentClip', {} as Clip);\nexport const clipQueue = createEntity('clipQueue', [] as Clip[]);\nexport const clipMemory = createEntity('clipMemory', [] as Clip[]);\nexport const acceptingClips = entity(false);\n\nexport const addClip = (clip: Clip): void => {\n  const queued = getQueuedClip(clip);\n  if (queued) {\n    const sameSubmitter =\n      queued.submitter === clip.submitter || (queued.submitters?.includes(clip.submitter as string) ?? false);\n    if (!sameSubmitter) {\n      const newQueued = {\n        ...queued,\n        submitters: [...(queued?.submitters ?? []), clip.submitter as string],\n      };\n      clipQueue.set((queue) =>\n        queue\n          .map((c) => (same(c, newQueued) ? newQueued : c))\n          .sort((a, b) => (b.submitters?.length ?? 0) - (a.submitters?.length ?? 0))\n      );\n    }\n\n    return;\n  } else if (getMemorizedClip(clip)) {\n    return;\n  }\n\n  clipMemory.set((memory) => [...(memory ?? []), clip]);\n  clipQueue.set((queue) => [...(queue ?? []), clip]);\n};\n\nexport const nextClip = (): void => {\n  clipQueue.set((queue) => {\n    const next = (queue ?? []).shift();\n\n    currentClip.set(next ?? {});\n\n    return [...queue];\n  });\n};\n\nexport const getMemorizedClip = (clip: Clip): Clip | undefined => {\n  const memory = clipMemory.get();\n\n  return memory?.find((c) => same(c, clip)) ?? undefined;\n};\n\nexport const getQueuedClip = (clip: Clip): Clip | undefined => {\n  const queue = clipQueue.get();\n\n  return queue?.find((c) => same(c, clip)) ?? undefined;\n};\n\nexport const selectCurrentClip = (clip: Clip): void => {\n  const queued = getQueuedClip(clip);\n  if (queued) {\n    currentClip.set(queued);\n    removeClip(queued);\n  }\n};\n\nexport const removeClip = (clip: Clip): void => {\n  clipQueue.set(queue => queue.filter(c => !same(c, clip)));\n};\n\nexport const clearQueue = (): void => {\n  clipQueue.set([]);\n  currentClip.set({});\n};\n\nexport const clearMemory = (): void => {\n  clipMemory.set([...(clipQueue.get() ?? [])]);\n};\n\nexport const acceptClips = (accept: boolean): void => {\n  acceptingClips.set(accept);\n}\n","import axios from 'axios';\r\nimport { AuthInfo, IdToken } from '../models';\r\nimport { logIn } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\nconst TWITCH_REDIRECT_URI = process.env.REACT_APP_TWITCH_REDIRECT_URI;\r\n\r\nconst getLoginUrl = (): string => {\r\n  return encodeURI(\r\n    `https://id.twitch.tv/oauth2/authorize?client_id=${TWITCH_CLIENT_ID}` +\r\n      `&redirect_uri=${TWITCH_REDIRECT_URI}` +\r\n      `&response_type=token id_token` +\r\n      `&scope=openid chat:read` +\r\n      `&claims={\"id_token\":{\"preferred_username\":null}}`\r\n  );\r\n};\r\n\r\nconst redirectToLogin = (): void => {\r\n  window.location.assign(getLoginUrl());\r\n};\r\n\r\nconst processAuth = (): void => {\r\n  if (!window.location.hash) {\r\n    return;\r\n  }\r\n\r\n  const authInfo = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((authInfo, s) => {\r\n      const parts = s.split('=');\r\n      authInfo[parts[0]] = decodeURIComponent(decodeURIComponent(parts[1]));\r\n      return authInfo;\r\n    }, {} as Record<string, any>) as AuthInfo;\r\n\r\n  window.location.hash = '';\r\n\r\n  if (authInfo.access_token && authInfo.id_token) {\r\n    authInfo.decodedIdToken = parseJwt(authInfo.id_token) as IdToken;\r\n\r\n    logIn(authInfo.access_token, authInfo.id_token, authInfo.decodedIdToken?.preferred_username ?? '');\r\n  }\r\n};\r\n\r\nconst revokeToken = async (token: string): Promise<void> => {\r\n  await axios.post(`https://id.twitch.tv/oauth2/revoke?client_id=${TWITCH_CLIENT_ID}&token=${token}`);\r\n};\r\n\r\nfunction parseJwt(token: string) {\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\nconst TwitchAuth = {\r\n  getLoginUrl,\r\n  redirectToLogin,\r\n  processAuth,\r\n  revokeToken,\r\n};\r\n\r\nexport default TwitchAuth;\r\n","import React, { ButtonHTMLAttributes, ReactNode } from 'react';\n\ninterface ButtonProps extends ButtonHTMLAttributes<any> {\n  className?: string;\n  colour?: string;\n  children?: ReactNode | undefined;\n\n  onClick: () => void;\n}\n\nexport const addButtonColour = (colour: string | undefined, classes: string | undefined) => {\n  classes = (classes || '') + ' ';\n\n  switch (colour) {\n    case 'red':\n      return classes + 'bg-red-500 border-red-700 hover:bg-red-400 hover:border-red-500';\n    case 'green':\n      return classes + 'bg-green-500 border-green-700 hover:bg-green-400 hover:border-green-500';\n    case 'yellow':\n      return classes + 'bg-yellow-500 border-yellow-700 hover:bg-yellow-400 hover:border-yellow-500';\n  }\n\n  return classes + 'bg-purple-500 border-purple-700 hover:bg-purple-400 hover:border-purple-500';\n};\n\nfunction Button({ className, colour, children, onClick, ...props }: ButtonProps) {\n  let classes = addButtonColour(colour, className);\n\n  return (\n    <button {...props} className={classes} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import axios from 'axios';\r\nimport { TwitchClip, TwitchGame } from '../models';\r\nimport { accessToken } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\n\r\nconst TwitchApiClient = axios.create({\r\n  baseURL: 'https://api.twitch.tv/helix/',\r\n  headers: {\r\n    'Client-ID': TWITCH_CLIENT_ID,\r\n  },\r\n});\r\n\r\nconst getClip = async (id: string): Promise<TwitchClip> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchClip[] }>(`clips?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getGame = async (id: string): Promise<TwitchGame> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchGame[] }>(`games?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst TwitchApi = {\r\n  getClip,\r\n  getGame,\r\n};\r\n\r\nexport default TwitchApi;\r\n","import TwitchApi from \"../services/TwitchApi\";\r\nimport { createEntity } from \"./helpers\";\r\n\r\nconst gamesDictionary = createEntity('gamesDictionary', {} as Record<string, string>);\r\n\r\nexport const getGameName = async (id: string): Promise<string> => {\r\n  const dict = gamesDictionary.get();\r\n  if (dict[id]) {\r\n    return dict[id];\r\n  }\r\n\r\n  const game = await TwitchApi.getGame(id);\r\n\r\n  if (game) {\r\n    gamesDictionary.set(d => ({ ...d, [id]: game.name }));\r\n    return game.name;\r\n  }\r\n\r\n  return '';\r\n};\r\n","import { Clip, Provider } from '../../models';\r\nimport { getGameName } from '../../store/dictionaries';\r\nimport { getMemorizedClip } from '../../store/queue';\r\nimport TwitchApi from '../TwitchApi';\r\n\r\nconst canHandle = (url: string): boolean => {\r\n  const uri = new URL(url);\r\n  if (uri.hostname === 'clips.twitch.tv') {\r\n    return true;\r\n  }\r\n\r\n  if (uri.hostname.endsWith('twitch.tv')) {\r\n    if (uri.pathname.includes('/clip/')) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\r\n  try {\r\n    const uri = new URL(url);\r\n    if (!canHandle(url)) {\r\n      return;\r\n    }\r\n\r\n    const idStart = uri.pathname.lastIndexOf('/');\r\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\r\n\r\n    const fromMemory = getMemorizedClip({\r\n      provider: 'twitch-clip',\r\n      id,\r\n    });\r\n\r\n    if (fromMemory) {\r\n      return { ...fromMemory };\r\n    }\r\n\r\n    const clipInfo = await TwitchApi.getClip(id);\r\n\r\n    if (clipInfo) {\r\n      return {\r\n        id,\r\n        channel: clipInfo.broadcaster_name,\r\n        game: await getGameName(clipInfo.game_id),\r\n        provider: 'twitch-clip',\r\n        thumbnailUrl: clipInfo.thumbnail_url,\r\n        title: clipInfo.title,\r\n      };\r\n    }\r\n  } catch {}\r\n};\r\n\r\nconst TwitchClipProvider: Provider = {\r\n  canHandle,\r\n  tryGetClip,\r\n};\r\n\r\nexport default TwitchClipProvider;\r\n","import axios from 'axios';\r\n\r\nconst getClip = async (id: string): Promise<any> => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://www.youtube.com/oembed?format=json&url=https://www.youtube.com/watch?v=${id}`\r\n    );\r\n    return data;\r\n  } catch {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst YoutubeApi = {\r\n  getClip,\r\n};\r\n\r\nexport default YoutubeApi;\r\n","import { Clip, Provider } from '../../models';\r\nimport { getMemorizedClip } from '../../store/queue';\r\nimport YoutubeApi from '../YoutubeApi';\r\n\r\nconst canHandle = (url: string): boolean => {\r\n  const uri = new URL(url);\r\n  if (uri.hostname === 'youtu.be') {\r\n    return true;\r\n  }\r\n\r\n  if (uri.hostname.endsWith('youtube.com')) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\r\n  try {\r\n    const uri = new URL(url);\r\n    if (!canHandle(url)) {\r\n      return;\r\n    }\r\n\r\n    let id: string | undefined = undefined;\r\n    if (uri.hostname === 'youtu.be') {\r\n      const idStart = uri.pathname.lastIndexOf('/') + 1;\r\n      id = uri.pathname.slice(idStart).split('?')[0];\r\n    } else if (uri.hostname.endsWith('youtube.com')) {\r\n      id = uri.searchParams.get('v') ?? undefined;\r\n    }\r\n\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    const startTime = uri.searchParams.get('t') ?? undefined;\r\n\r\n    const fromMemory = getMemorizedClip({\r\n      provider: 'youtube',\r\n      id,\r\n    });\r\n\r\n    if (fromMemory) {\r\n      return { ...fromMemory };\r\n    }\r\n\r\n    const clipInfo = await YoutubeApi.getClip(id);\r\n\r\n    return {\r\n      id,\r\n      channel: clipInfo?.author_name ?? 'YouTube',\r\n      thumbnailUrl: clipInfo?.thumbnail_url ?? `https://i.ytimg.com/vi/${id}/hqdefault.jpg`,\r\n      provider: 'youtube',\r\n      title: clipInfo?.title ?? id,\r\n      startTime,\r\n    };\r\n  } catch {}\r\n};\r\n\r\nconst YouTubeProvider: Provider = {\r\n  canHandle,\r\n  tryGetClip,\r\n};\r\n\r\nexport default YouTubeProvider;\r\n","import { Clip } from '../models';\nimport { addClip } from '../store/queue';\nimport TwitchClipProvider from './providers/twitch-clip';\nimport YouTubeProvider from './providers/youtube';\n\nconst providers = [TwitchClipProvider, YouTubeProvider];\n\nconst findByUrl = async (url: string): Promise<Clip | undefined> => {\n  for (const provider of providers) {\n    if (!provider.canHandle(url)) {\n      continue;\n    }\n\n    const clip = await provider.tryGetClip(url);\n\n    if (clip) {\n      return clip;\n    }\n  }\n\n  return undefined;\n};\n\n(window as any).clip = async (s: string, u: string) => {\n  const clip = await findByUrl(u);\n  if (clip) {\n    console.log('adding clip', clip);\n    clip.submitter = s;\n    clip.url = u;\n    addClip(clip);\n  }\n};\n\nconst ClipFinder = {\n  findByUrl,\n};\n\nexport default ClipFinder;\n","import { acceptingClips, addClip } from '../store/queue';\nimport { accessToken, userChannel, userName } from '../store/user';\nimport ClipFinder from './ClipFinder';\n\nlet socket: WebSocket;\n\nconst send = (message: string) => {\n  socket.send(message);\n};\n\nconst parseMessage = (raw: string) => {\n  const tagEnd = raw[0] === '@' ? raw.indexOf(' ') : -1;\n  const userEnd = raw.indexOf(' ', tagEnd + 1);\n  const commandEnd = raw.indexOf(' ', userEnd + 1);\n\n  const tags =\n    tagEnd > 0\n      ? raw\n          .slice(1, tagEnd)\n          .split(';')\n          .reduce((t, c) => {\n            const parts = c.split('=', 2);\n            t[parts[0]] = parts[1];\n            return t;\n          }, {} as Record<string, string>)\n      : {};\n\n  const user = raw.slice(tagEnd + 2, raw.indexOf('!', tagEnd + 2));\n  const command = raw.slice(userEnd + 1, commandEnd);\n\n  if (command === 'PRIVMSG') {\n    const channelEnd = raw.indexOf(' ', commandEnd + 1);\n    const messageStart = raw.indexOf(':', channelEnd + 1);\n    const channel = raw.slice(commandEnd + 2, channelEnd);\n    const message = raw.slice(messageStart + 1).trim();\n    return {\n      channel,\n      user: tags['display-name'] || user,\n      command,\n      message,\n      tags,\n    };\n  }\n\n  return {\n    raw,\n    user: tags['display-name'] || user,\n    command,\n    tags,\n  };\n};\n\nconst connect = () => {\n  socket = new WebSocket('wss://irc-ws.chat.twitch.tv:443', 'irc');\n\n  socket.onopen = () => {\n    if (socket !== null && socket.readyState === 1) {\n      console.log('[TwitchChat] Connecting and authenticating...');\n\n      send('CAP REQ :twitch.tv/tags');\n      send(`PASS oauth:${accessToken.get()}`);\n      send(`NICK ${userName.get()}`);\n      joinChannel(userChannel.get() as string);\n    }\n  };\n\n  socket.onclose = () => {\n    console.log('[TwitchChat] Disconnected');\n  };\n\n  socket.onerror = (error) => {\n    console.warn('[TwitchChat] Error:', error);\n  };\n\n  socket.onmessage = ({ data }: MessageEvent<string>) => {\n    if (data.startsWith('PING')) {\n      send('PONG :tmi.twitch.tv');\n    }\n\n    const message = parseMessage(data);\n\n    if (message.command === 'PRIVMSG' && message.message) {\n      if (!acceptingClips.get()) {\n        return;\n      }\n\n      const urlStart = message.message.indexOf('http');\n\n      if (urlStart >= 0) {\n        const urlEnd = message.message.indexOf(' ', urlStart);\n        const url = message.message.slice(urlStart, urlEnd > 0 ? urlEnd : undefined);\n        console.log('[TwitchChat] Found url:', url);\n\n        ClipFinder.findByUrl(url).then((clip) => {\n          if (clip) {\n            clip.url = url;\n            clip.submitter = message.user;\n            addClip(clip);\n          }\n        });\n      }\n    }\n  };\n};\n\nconst disconnect = () => {\n  socket.close();\n};\n\nconst joinChannel = (channel: string) => {\n  console.log('[TwitchChat] Joining channel', channel);\n  send(`JOIN #${channel}`);\n};\n\nconst leaveChannel = (channel: string) => {\n  console.log('[TwitchChat] Leaving channel', channel);\n  send(`PART #${channel}`);\n\n};\n\nconst TwitchChat = {\n  connect,\n  disconnect,\n  joinChannel,\n  leaveChannel,\n};\n\nexport default TwitchChat;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Button from './components/Button';\nimport TwitchAuth from './services/TwitchAuth';\nimport { isLoggedIn, logOut } from './store/user';\n\nconst HomePage = React.lazy(() => import('./pages/Home/HomePage'));\nconst QueuePage = React.lazy(() => import('./pages/Queue/QueuePage'));\n\nfunction App() {\n  const loggedIn = isLoggedIn.use();\n\n  return (\n    <>\n      <header className=\"flex\">\n        <h1 className=\"mb-4\">Twitch Clip Queue</h1>\n        <div className=\"flex-grow\"></div>\n        <div>\n          {loggedIn ? (\n            <Button onClick={() => logOut()}>Logout</Button>\n          ) : (\n            <Button onClick={() => TwitchAuth.redirectToLogin()}>Login with Twitch</Button>\n          )}\n        </div>\n      </header>\n      <Suspense fallback={<div></div>}>\n        <Router basename={process.env.REACT_APP_BASEPATH}>\n          <Switch>\n            <Route exact={true} path=\"/\">\n              {!loggedIn ? <HomePage /> : <QueuePage />}\n            </Route>\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Router>\n      </Suspense>\n      <div className=\"flex-grow\"></div>\n      <footer className=\"text-xs mt-4\">\n        Created by{' '}\n        <span className=\"font-bold\">\n          <a href=\"https://github.com/JakeMiki\" target=\"_blank\" rel=\"noreferrer\">\n            JakeMiki\n          </a>\n        </span>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport TwitchAuth from \"./services/TwitchAuth\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nTwitchAuth.processAuth();\r\n"],"sourceRoot":""}