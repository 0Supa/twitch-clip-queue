{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Toggle.tsx","pages/Queue/ClipCard.tsx","pages/Queue/ClipRoll.tsx","pages/Queue/Player.tsx","pages/Queue/QueuePage.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Toggle","pressed","className","colour","children","onClick","props","classes","addButtonColour","ClipCard","id","provider","url","thumbnailUrl","title","submitter","submitterCount","channel","game","src","alt","Button","selectCurrentClip","removeClip","href","target","rel","ClipRoll","clips","clipLimit","isAcceptingClip","useState","acceptingClips","slice","map","clip","submitters","get","PlayerSwitch","window","location","hostname","height","width","allowFullScreen","startTime","Player","QueuePage","advancedVisible","setAdvancedVisible","isAcceptingClips","useHookState","clipQueue","clipMem","clipMemory","current","currentClip","token","userName","userChannel","tokenValue","useEffect","TwitchChat","connect","disconnect","nextClip","acceptClips","clearQueue","newChannel","prompt","changeChannel","ClipFinder","findByUrl","then","addClip","clearMemory"],"mappings":"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","file":"static/js/4.552d5898.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { ButtonHTMLAttributes, ReactNode } from 'react';\r\nimport { addButtonColour } from './Button';\r\n\r\ninterface ToggleProps extends ButtonHTMLAttributes<any> {\r\n  pressed: boolean;\r\n  className?: string;\r\n  colour?: string;\r\n  children?: ReactNode | undefined;\r\n\r\n  onClick: () => void;\r\n}\r\n\r\nfunction Toggle({ pressed, className, colour, children, onClick, ...props }: ToggleProps) {\r\n  let classes = addButtonColour(colour, className);\r\n\r\n  if (pressed) {\r\n    classes += ' pressed';\r\n  }\r\n\r\n  return (\r\n    <button {...props} className={classes} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Toggle;\r\n","import React from 'react';\r\nimport Button from '../../components/Button';\r\nimport { removeClip, selectCurrentClip } from '../../store/queue';\r\n\r\nexport interface ClipCardProps {\r\n  id: string;\r\n  provider: string;\r\n  title?: string;\r\n  submitter?: string;\r\n  submitterCount?: number;\r\n  channel?: string;\r\n  game?: string;\r\n\r\n  url?: string;\r\n  thumbnailUrl?: string;\r\n}\r\n\r\nfunction ClipCard({\r\n  id,\r\n  provider,\r\n  url,\r\n  thumbnailUrl,\r\n  title,\r\n  submitter,\r\n  submitterCount = 0,\r\n  channel,\r\n  game,\r\n}: ClipCardProps) {\r\n  return (\r\n    <div className={'clip max-w-sm rounded overflow-hidden flex flex-col'}>\r\n      {thumbnailUrl && <img className=\"w-full\" src={thumbnailUrl} alt={title} />}\r\n      <div className=\"h-full w-full relative\">\r\n        <div className=\"absolute flex right-1 bottom-1 clip-buttons space-x-1\">\r\n          <Button colour=\"green\" onClick={() => selectCurrentClip({ id, provider })}>\r\n            &raquo;\r\n          </Button>\r\n          <Button colour=\"red\" onClick={() => removeClip({ id, provider })}>\r\n            &times;\r\n          </Button>\r\n        </div>\r\n        <div className=\"px-2 py-1\">\r\n          <h4 className=\"font-bold text-sm mb-1\">\r\n            <a className=\"text-black no-underline\" href={url} target=\"_blank\" rel=\"noreferrer\">\r\n              {title}\r\n            </a>\r\n          </h4>\r\n          <p className=\"text-gray-700 text-xs mb-1 font-normal\">\r\n            <span className=\"font-bold\">{channel} </span>\r\n            {game && (\r\n              <span>\r\n                playing&nbsp;<span className=\"font-bold\">{game}</span>\r\n              </span>\r\n            )}\r\n          </p>\r\n          <p className=\"text-gray-700 text-xs font-normal\">\r\n            {submitter && (\r\n              <>\r\n                Submitted by <span className=\"font-bold\">{submitter}</span>\r\n              </>\r\n            )}\r\n            <span className=\"text-xs\">{submitterCount > 0 && ' +' + submitterCount}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClipCard;\r\n","import { useState } from '@hookstate/core';\r\nimport React from 'react';\r\nimport { acceptingClips } from '../../store/queue';\r\nimport ClipCard from './ClipCard';\r\n\r\nexport interface ClipRollProps {\r\n  clips: any[];\r\n  clipLimit?: number;\r\n}\r\n\r\nfunction ClipRoll({ clips, clipLimit = 19 }: ClipRollProps) {\r\n  const isAcceptingClip = useState(acceptingClips);\r\n\r\n  return (\r\n    <div className=\"grid gap-3 grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 w-full\">\r\n      {clips.length ? (\r\n        <>\r\n          {clips.slice(0, clipLimit).map((clip) => (\r\n            <ClipCard key={`${clip.provider}:${clip.id}`} {...clip} submitterCount={clip.submitters?.length} />\r\n          ))}\r\n          {clips.length > clipLimit && (\r\n            <div className=\"clip max-w-sm rounded overflow-hidden text-3xl flex py-4\">\r\n              <div className=\"mx-auto my-auto\">+{clips.length - clipLimit} more</div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        isAcceptingClip.get() && <div className=\"col-span-full text-lg font-bold\">Waiting for some clips from chat...</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClipRoll;\r\n","import React from 'react';\r\n\r\nexport interface PlayerProps {\r\n  title?: string;\r\n  provider?: string;\r\n  id?: string;\r\n  channel?: string;\r\n  game?: string;\r\n  submitter?: string;\r\n  submitterCount?: number;\r\n  startTime?: string;\r\n}\r\n\r\nfunction Player(props: PlayerProps) {\r\n  const { game, channel, title, submitter, submitterCount = 0 } = props;\r\n  return (\r\n    <>\r\n      <div className=\"player\">\r\n        <PlayerSwitch {...props} />\r\n      </div>\r\n      <div className=\"pt-2\">\r\n        <h2 className=\"font-bold mb-1\">{title ?? <>&nbsp;</>}</h2>\r\n        <p className=\"text-gray-500 text-sm font-normal\">\r\n          {channel ? (\r\n            <>\r\n              <span className=\"font-bold\">{channel}</span>\r\n              {game && (\r\n                <span>\r\n                  &nbsp;playing&nbsp;<span className=\"font-bold\">{game}</span>\r\n                </span>\r\n              )}\r\n              , submitted by <span className=\"font-bold\">{submitter}</span>\r\n              {submitterCount > 0 && <> and {submitterCount} other(s)</>}\r\n            </>\r\n          ) : (\r\n            <>&nbsp;</>\r\n          )}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PlayerSwitch({ provider, ...props }: PlayerProps) {\r\n  switch (provider) {\r\n    case undefined:\r\n      return <></>;\r\n    case 'twitch-clip':\r\n      return (\r\n        <iframe\r\n          src={`https://clips.twitch.tv/embed?clip=${props.id}&autoplay=true&parent=${window.location.hostname}`}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          className=\"player\"\r\n          allowFullScreen={true}\r\n          title={props.title}\r\n        ></iframe>\r\n      );\r\n    case 'twitch-vod':\r\n      return (\r\n        <iframe\r\n          src={`https://player.twitch.tv/?video=${props.id}&autoplay=true&parent=${window.location.hostname}&time=${props.startTime}`}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          className=\"player\"\r\n          allowFullScreen={true}\r\n          title={props.title}\r\n        ></iframe>\r\n      );\r\n    case 'youtube':\r\n      return (\r\n        <iframe\r\n          src={`https://www.youtube.com/embed/${props.id}?autoplay=1&start=${props.startTime ?? ''}`}\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          className=\"player\"\r\n          allowFullScreen={true}\r\n          title={props.title}\r\n        ></iframe>\r\n      );\r\n  }\r\n\r\n  return <span>Provider not supported: {provider}</span>;\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from 'react';\nimport { useState as useHookState } from '@hookstate/core';\nimport Button from '../../components/Button';\nimport Toggle from '../../components/Toggle';\nimport ClipFinder from '../../services/ClipFinder';\nimport TwitchChat from '../../services/TwitchChat';\nimport {\n  acceptClips,\n  acceptingClips,\n  addClip,\n  clearMemory,\n  clearQueue,\n  clipMemory,\n  clipQueue,\n  currentClip,\n  nextClip,\n} from '../../store/queue';\nimport { changeChannel, userChannel, userName } from '../../store/user';\nimport ClipRoll from './ClipRoll';\nimport Player from './Player';\nimport './styles.css';\n\nfunction QueuePage() {\n  const [advancedVisible, setAdvancedVisible] = useState(false);\n  const isAcceptingClips = useHookState(acceptingClips);\n  const clips = useHookState(clipQueue);\n  const clipMem = useHookState(clipMemory);\n  const current = useHookState(currentClip);\n\n  const token = useHookState(userName);\n  const channel = useHookState(userChannel);\n  const tokenValue = token.get();\n\n  useEffect(() => {\n    TwitchChat.connect();\n    return () => { TwitchChat.disconnect() };\n  }, [tokenValue]);\n\n  return (\n    <>\n      <Player {...current.get()} submitterCount={current.submitters.get()?.length} />\n      <div className=\"mt-4 flex w-full\">\n        <Button colour=\"green\" className=\"mr-2\" onClick={() => nextClip()}>\n          Next &raquo;\n        </Button>\n        <Toggle pressed={isAcceptingClips.get()} className=\"mr-2\" onClick={() => acceptClips(!isAcceptingClips.get())}>\n          {isAcceptingClips.get() ? <>Close the floodgates! 🌊</> : <>Open the floodgates! 🚪</>}\n        </Toggle>\n        <Button colour=\"red\" className=\"mr-2\" onClick={() => clearQueue()}>\n          &times; Clear queue <em>({clips.length})</em>\n        </Button>\n        <Toggle pressed={advancedVisible} colour=\"red\" onClick={() => setAdvancedVisible(!advancedVisible)}>\n          ⚙️\n        </Toggle>\n      </div>\n      {advancedVisible && (\n        <div className=\"mt-2 flex w-full\">\n          <Button\n            className=\"mr-2\"\n            onClick={() => {\n              const newChannel = prompt('Enter channel to read chat from', channel.get() as string);\n              if (newChannel && newChannel !== channel.get()) {\n                changeChannel(newChannel);\n              }\n            }}\n          >\n            Change channel <em>({channel.get()})</em>\n          </Button>\n          <Button\n            className=\"mr-2\"\n            onClick={() => {\n              const url = prompt('Enter clip url', '');\n              if (url) {\n                ClipFinder.findByUrl(url).then((clip) => {\n                  if (clip) {\n                    clip.url = url;\n                    clip.submitter = userName.get() ?? undefined;\n                    addClip(clip);\n                  }\n                });\n              }\n            }}\n          >\n           + Add cilp\n          </Button>\n          <Button\n            onClick={() => clearMemory()}\n            title=\"Remove all clips from permanent memory, allow all clips to be posted and queued again\"\n          >\n            &times; Purge memory <em>({clipMem.length})</em>\n          </Button>\n        </div>\n      )}\n      <div className=\"mt-4\">\n        <ClipRoll clips={clips.get()} />\n      </div>\n    </>\n  );\n}\n\nexport default QueuePage;\n"],"sourceRoot":""}