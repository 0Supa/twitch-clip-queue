{"version":3,"sources":["store/user.ts","store/helpers.ts","common/analytics.ts","services/TwitchAuth.ts","common/logging.ts","services/TwitchChat.ts","common/utils.ts","services/TwitchApi.ts","store/dictionaries.ts","services/providers/twitch-clip.ts","services/providers/twitch-vod.ts","services/YoutubeApi.ts","services/providers/youtube.ts","services/ClipFinder.ts","store/queue.ts","components/ForkMeOnGithub.tsx","pages/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isLoggedIn","createState","accessToken","idToken","userName","userChannel","createPersistentState","logIn","auth","id","username","set","get","trace","toLowerCase","Date","getDay","currentClip","title","channel","provider","thumbnailUrl","submitter","displayName","submitters","Array","game","logOut","a","token","TwitchAuth","revokeToken","changeChannel","TwitchChat","leaveChannel","joinChannel","name","initialValue","state","attach","Persistence","same","b","logger","createLogger","umami","window","eventQueue","value","type","debug","push","e","shift","trackEvent","TWITCH_CLIENT_ID","process","getLoginUrl","encodeURI","redirectToLogin","location","assign","processAuth","hash","authInfo","substring","split","reduce","s","parts","decodeURIComponent","access_token","id_token","decodedIdToken","base64","replace","jsonPayload","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","parseJwt","preferred_username","axios","post","LogLevel","globalLogLevel","setLogLevel","level","info","ConsoleLogger","message","data","this","log","warn","error","messageWithName","console","__setLogLevel","client","disconnect","connect","Client","options","skipUpdatingEmotesets","skipMembership","bind","identity","password","connection","reconnect","secure","then","catch","on","reason","_channel","userstate","self","acceptingClips","url","getUrlFromMessage","ClipFinder","findByUrl","clip","addClip","handleMessage","_username","removeClip","handleMessageDeleted","clipQueue","filter","some","forEach","length","none","handleTimeout","part","urlStart","indexOf","urlEnd","undefined","TwitchApiClient","create","baseURL","headers","TwitchApi","getClip","Authorization","getVideo","getGame","gamesDictionary","getGameName","dict","d","canHandle","uri","URL","hostname","endsWith","pathname","includes","tryGetClip","idStart","lastIndexOf","fromMemory","getMemorizedClip","clipInfo","broadcaster_name","game_id","thumbnail_url","created_at","timestamp","TwitchClipProvider","user_name","startTime","searchParams","TwitchVodProvider","YoutubeApi","author_name","providers","now","clipMemory","queuedState","find","queued","queue","sort","memory","nextClip","stringify","selectCurrentClip","getQueuedClip","index","findIndex","clearQueue","clearMemory","acceptClips","accept","reloadClip","ForkMeOnGithub","href","target","rel","loading","width","height","src","className","alt","HomePage","React","lazy","QueuePage","Routes","loggedIn","useState","fallback","basename","path","to","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f22843.chunk.js","sourcesContent":["import { createState } from \"@hookstate/core\";\nimport { trace } from \"../common/analytics\";\nimport TwitchAuth from \"../services/TwitchAuth\";\nimport TwitchChat from \"../services/TwitchChat\";\nimport { createPersistentState } from \"./helpers\";\nimport { currentClip } from \"./queue\";\n\nexport const isLoggedIn = createState<boolean>(false);\n\nexport const accessToken = createState<string | null>(null);\nexport const idToken = createState<string | null>(null);\n\nexport const userName = createState<string | null>(null);\nexport const userChannel = createPersistentState<string | null>('userChannel', null);\n\nexport const logIn = (auth: string, id: string, username: string): void => {\n  accessToken.set(auth);\n  idToken.set(id);\n  userName.set(username);\n\n  if (!userChannel.get()) {\n    userChannel.set(username);\n  }\n\n  isLoggedIn.set(true);\n\n  trace('user-logged-in');\n\n  // temp easter egg\n  if (username.toLowerCase() === 'wolfabelle' && (new Date()).getDay() === 5) {\n    currentClip.set({\n      title: 'ITS FRIDAY THEN, ITS SATURDAY, SUNDAY! GO MUFASA!',\n      channel: 'MUFASA',\n      id: '1TewCPi92ro',\n      provider: 'youtube',\n      thumbnailUrl: 'https://i.ytimg.com/vi/1TewCPi92ro/hqdefault.jpg',\n      submitter: { displayName: 'Friday', userName: '' },\n      submitters: new Array(69420),\n      game: 'Friday',\n    })\n  }\n  //\n}\n\nexport const logOut = async (): Promise<void> => {\n  const token = accessToken.get();\n  accessToken.set(null);\n  idToken.set(null);\n  userName.set(null);\n  isLoggedIn.set(false);\n\n  if (token) {\n    await TwitchAuth.revokeToken(token);\n  }\n\n  trace('user-logged-out');\n}\n\nexport const changeChannel = (channel: string) => {\n  TwitchChat.leaveChannel(userChannel.get() as string);\n  userChannel.set(channel);\n  TwitchChat.joinChannel(channel);\n\n  trace('channel-changed');\n};\n","import { createState, State } from '@hookstate/core';\r\nimport { Persistence } from '@hookstate/persistence';\r\nimport { Clip } from '../models';\r\n\r\nexport function createPersistentState<TState>(\r\n  name: string,\r\n  initialValue: TState\r\n): State<TState> {\r\n  const state = createState(initialValue);\r\n  state.attach(Persistence(name))\r\n  return state;\r\n}\r\n\r\nexport function same(a: Clip, b: Clip) {\r\n  return a.id === b.id && a.provider === b.provider;\r\n}\r\n","import { createLogger } from \"./logging\";\n\nconst logger = createLogger('Umami Event');\n\nconst umami = (window as any).umami;\nconst eventQueue: { type: string; value: string; }[] = [];\n\nexport function trace(value: string, type = 'custom') {\n  logger.debug(`${type}: ${value}`);\n\n  try {\n    eventQueue.push({ type, value });\n\n    if (umami) {\n      let e;\n\n      // eslint-disable-next-line\n      while (e = eventQueue.shift()) {\n        umami.trackEvent(e.value, e.type);\n      }\n    }\n  } catch {}\n}\n","import axios from 'axios';\r\nimport { AuthInfo, IdToken } from '../models';\r\nimport { logIn } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\nconst TWITCH_REDIRECT_URI = process.env.REACT_APP_TWITCH_REDIRECT_URI;\r\n\r\nconst getLoginUrl = (): string => {\r\n  return encodeURI(\r\n    `https://id.twitch.tv/oauth2/authorize?client_id=${TWITCH_CLIENT_ID}` +\r\n      `&redirect_uri=${TWITCH_REDIRECT_URI}` +\r\n      `&response_type=token id_token` +\r\n      `&scope=openid chat:read` +\r\n      `&claims={\"id_token\":{\"preferred_username\":null}}`\r\n  );\r\n};\r\n\r\nconst redirectToLogin = (): void => {\r\n  window.location.assign(getLoginUrl());\r\n};\r\n\r\nconst processAuth = (): void => {\r\n  if (!window.location.hash) {\r\n    return;\r\n  }\r\n\r\n  const authInfo = window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((authInfo, s) => {\r\n      const parts = s.split('=');\r\n      authInfo[parts[0]] = decodeURIComponent(decodeURIComponent(parts[1]));\r\n      return authInfo;\r\n    }, {} as Record<string, any>) as AuthInfo;\r\n\r\n  window.location.hash = '';\r\n\r\n  if (authInfo.access_token && authInfo.id_token) {\r\n    authInfo.decodedIdToken = parseJwt(authInfo.id_token) as IdToken;\r\n\r\n    logIn(authInfo.access_token, authInfo.id_token, authInfo.decodedIdToken?.preferred_username ?? '');\r\n  }\r\n};\r\n\r\nconst revokeToken = async (token: string): Promise<void> => {\r\n  await axios.post(`https://id.twitch.tv/oauth2/revoke?client_id=${TWITCH_CLIENT_ID}&token=${token}`);\r\n};\r\n\r\nfunction parseJwt(token: string) {\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\nconst TwitchAuth = {\r\n  getLoginUrl,\r\n  redirectToLogin,\r\n  processAuth,\r\n  revokeToken,\r\n};\r\n\r\nexport default TwitchAuth;\r\n","\nenum LogLevel {\n  debug = 0,\n  info,\n  warn,\n  error,\n};\n\ntype LogLevels = keyof typeof LogLevel;\n\ntype LoggingFunction = (message: any, ...data: any[]) => void;\ninterface Logger {\n  debug: LoggingFunction;\n  info: LoggingFunction;\n  warn: LoggingFunction;\n  error: LoggingFunction;\n}\n\nlet globalLogLevel: LogLevel;\n\nconst setLogLevel = (level: LogLevels) => globalLogLevel = LogLevel[level] ?? LogLevel.info;\n\nclass ConsoleLogger implements Logger {\n  constructor(private name: string) {}\n\n  public debug(message: any, ...data: any[]): void {\n    this.log(LogLevel.debug, message, ...data);\n  }\n\n  public info(message: any, ...data: any[]): void {\n    this.log(LogLevel.info, message, ...data);\n  }\n\n  public warn(message: any, ...data: any[]): void {\n    this.log(LogLevel.warn, message, ...data);\n  }\n\n  public error(message: any, ...data: any[]): void {\n    this.log(LogLevel.error, message, ...data);\n  }\n\n  protected log(level: LogLevel, message: any, ...data: any[]): void {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    const messageWithName = `[${this.name}] ${message}`;\n\n    switch (level) {\n      case LogLevel.debug:\n        console.debug(messageWithName, ...data);\n        break;\n      case LogLevel.info:\n        console.info(messageWithName, ...data);\n        break;\n      case LogLevel.warn:\n        console.warn(messageWithName, ...data);\n        break;\n      case LogLevel.error:\n        console.error(messageWithName, ...data);\n        break;\n    }\n  }\n}\n\nsetLogLevel((process.env.REACT_APP_LOG_LEVEL) as LogLevels);\n(window as any).__setLogLevel = setLogLevel;\n\nexport function createLogger(name: string): Logger {\n  return new ConsoleLogger(name);\n}\n","import { createLogger } from '../common/logging';\nimport { getUrlFromMessage } from '../common/utils';\nimport { acceptingClips, addClip, clipQueue, removeClip } from '../store/queue';\nimport { accessToken, userChannel, userName } from '../store/user';\nimport { Client, Userstate } from 'tmi.js';\nimport ClipFinder from './ClipFinder';\nimport { none } from '@hookstate/core';\n\nconst logger = createLogger('Twitch Chat');\n\nlet client: Client;\n\nconst handleMessage = (userstate: Userstate, message: string) => {\n  if (!acceptingClips.get()) {\n    return;\n  }\n\n  const url = getUrlFromMessage(message);\n\n  if (url) {\n    logger.debug('[handleMessage] Found url:', url);\n\n    ClipFinder.findByUrl(url).then((clip) => {\n      if (clip) {\n        clip.url = url;\n        clip.submitter = {\n          userName: userstate.username,\n          displayName: userstate['display-name']\n        };\n        addClip(clip);\n      }\n    });\n  }\n};\n\nconst handleMessageDeleted = (message: string) => {\n  const url = getUrlFromMessage(message);\n\n  if (url) {\n    logger.debug('[handleMessageDeleted] Found url:', url);\n\n    ClipFinder.findByUrl(url).then((clip) => {\n      if (clip) {\n        removeClip(clip);\n      }\n    });\n  }\n}\n\nconst handleTimeout = (username: string) => {\n  const clipsFromUser = clipQueue.filter((clip) => clip.submitter.get()?.userName === username || clip.submitters.get()?.some(s => s.userName === username));\n\n  clipsFromUser.forEach(clip => {\n    if (clip.submitter.get()?.userName === username) {\n      if (!clip.submitters.get()?.length) {\n        clip.set(none);\n      } else {\n        clip.submitter.set(clip.submitters.get()?.[0]);\n        clip.submitters.set(submitters => {\n          submitters?.shift();\n          return submitters;\n        })\n      }\n    } else {\n      clip.submitters.set(submitters => submitters?.filter(s => s.userName !== username));\n    }\n  });\n};\n\nconst connect = () => {\n  client = new Client({\n    options: {\n      debug: process.env.REACT_APP_LOG_LEVEL === 'debug',\n      skipUpdatingEmotesets: true,\n      skipMembership: true,\n    } as any,\n    logger: {\n      error: logger.error.bind(logger),\n      info: logger.info.bind(logger),\n      warn: logger.warn.bind(logger),\n    },\n    identity: {\n      username: userName.get() as string,\n      password: `oauth:${accessToken.get()}`,\n    },\n    connection: {\n      reconnect: true,\n      secure: true,\n    },\n  });\n\n  logger.info('Connecting and authenticating...');\n  client\n    .connect()\n    .then(() => {\n      logger.info('Connected.');\n      joinChannel(userChannel.get() as string);\n    })\n    .catch(logger.error.bind(logger));\n\n  client.on('disconnected', (reason) => logger.info('Disconnected:', reason));\n  client.on('message', (_channel, userstate, message, self) => self || handleMessage(userstate, message));\n  client.on('messagedeleted', (_channel, _username, message) => handleMessageDeleted(message));\n  client.on('timeout', (_channel, username) => handleTimeout(username))\n};\n\nconst disconnect = async () => {\n  await client?.disconnect();\n};\n\nconst joinChannel = async (channel: string) => {\n  logger.info('Joining channel', channel);\n  await client.join(channel.toLowerCase());\n};\n\nconst leaveChannel = async (channel: string) => {\n  logger.info('Leaving channel', channel);\n  await client.part(channel.toLowerCase());\n};\n\nconst TwitchChat = {\n  connect,\n  disconnect,\n  joinChannel,\n  leaveChannel,\n};\n\nexport default TwitchChat;\n","export const getUrlFromMessage = (message: string) => {\n\n  const urlStart = message.indexOf('http');\n  if (urlStart >= 0) {\n    const urlEnd = message.indexOf(' ', urlStart);\n    const url = message.slice(urlStart, urlEnd > 0 ? urlEnd : undefined);\n    return url;\n  }\n\n  return undefined;\n};\n","import axios from 'axios';\r\nimport { TwitchClip, TwitchGame, TwitchVideo } from '../models';\r\nimport { accessToken } from '../store/user';\r\n\r\nconst TWITCH_CLIENT_ID = process.env.REACT_APP_TWITCH_CLIENT_ID;\r\n\r\nconst TwitchApiClient = axios.create({\r\n  baseURL: 'https://api.twitch.tv/helix/',\r\n  headers: {\r\n    'Client-ID': TWITCH_CLIENT_ID,\r\n  },\r\n});\r\n\r\nconst getClip = async (id: string): Promise<TwitchClip> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchClip[] }>(`clips?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getVideo = async (id: string): Promise<TwitchVideo> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchVideo[] }>(`videos?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst getGame = async (id: string): Promise<TwitchGame> => {\r\n  const { data } = await TwitchApiClient.get<{ data: TwitchGame[] }>(`games?id=${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken.get()}`,\r\n    },\r\n  });\r\n\r\n  return data.data[0];\r\n};\r\n\r\nconst TwitchApi = {\r\n  getClip,\r\n  getVideo,\r\n  getGame,\r\n};\r\n\r\nexport default TwitchApi;\r\n","import TwitchApi from \"../services/TwitchApi\";\r\nimport { createPersistentState } from \"./helpers\";\r\n\r\nconst gamesDictionary = createPersistentState('gamesDictionary', {} as Record<string, string>);\r\n\r\nexport const getGameName = async (id: string): Promise<string> => {\r\n  const dict = gamesDictionary.get();\r\n  if (dict[id]) {\r\n    return dict[id];\r\n  }\r\n\r\n  const game = await TwitchApi.getGame(id);\r\n\r\n  if (game) {\r\n    gamesDictionary.set(d => ({ ...d, [id]: game.name }));\r\n    return game.name;\r\n  }\r\n\r\n  return '';\r\n};\r\n","import { Clip, Provider } from '../../models';\nimport { getGameName } from '../../store/dictionaries';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'clips.twitch.tv') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/clip/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n\n    const fromMemory = getMemorizedClip({\n      provider: 'twitch-clip',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getClip(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.broadcaster_name,\n        game: await getGameName(clipInfo.game_id),\n        provider: 'twitch-clip',\n        thumbnailUrl: clipInfo.thumbnail_url,\n        title: clipInfo.title,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch {}\n};\n\nconst TwitchClipProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default TwitchClipProvider;\n","import { Clip, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport TwitchApi from '../TwitchApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname.endsWith('twitch.tv')) {\n    if (uri.pathname.includes('/videos/')) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    const idStart = uri.pathname.lastIndexOf('/');\n    const id = uri.pathname.slice(idStart).split('?')[0].slice(1);\n\n    const fromMemory = getMemorizedClip({\n      provider: 'twitch-vod',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await TwitchApi.getVideo(id);\n\n    if (clipInfo) {\n      return {\n        id,\n        channel: clipInfo.user_name,\n        provider: 'twitch-vod',\n        thumbnailUrl: clipInfo.thumbnail_url.replace('%{width}x%{height}', '480x272'),\n        title: clipInfo.title,\n        startTime: uri.searchParams.get('t') ?? undefined,\n        timestamp: clipInfo.created_at,\n      };\n    }\n  } catch {}\n};\n\nconst TwitchVodProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default TwitchVodProvider;\n","import axios from 'axios';\r\n\r\nconst getClip = async (id: string): Promise<any> => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://www.youtube.com/oembed?format=json&url=https://www.youtube.com/watch?v=${id}`\r\n    );\r\n    return data;\r\n  } catch {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst YoutubeApi = {\r\n  getClip,\r\n};\r\n\r\nexport default YoutubeApi;\r\n","import { Clip, Provider } from '../../models';\nimport { getMemorizedClip } from '../../store/queue';\nimport YoutubeApi from '../YoutubeApi';\n\nconst canHandle = (url: string): boolean => {\n  const uri = new URL(url);\n  if (uri.hostname === 'youtu.be') {\n    return true;\n  }\n\n  if (uri.hostname.endsWith('youtube.com')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst tryGetClip = async (url: string): Promise<Clip | undefined> => {\n  try {\n    const uri = new URL(url);\n    if (!canHandle(url)) {\n      return;\n    }\n\n    let id: string | undefined = undefined;\n    if (uri.hostname === 'youtu.be') {\n      const idStart = uri.pathname.lastIndexOf('/') + 1;\n      id = uri.pathname.slice(idStart).split('?')[0];\n    } else if (uri.hostname.endsWith('youtube.com')) {\n      id = uri.searchParams.get('v') ?? undefined;\n    }\n\n    if (!id) {\n      return;\n    }\n\n    const startTime = uri.searchParams.get('t') ?? undefined;\n\n    const fromMemory = getMemorizedClip({\n      provider: 'youtube',\n      id,\n    });\n\n    if (fromMemory) {\n      return { ...fromMemory };\n    }\n\n    const clipInfo = await YoutubeApi.getClip(id);\n\n    return {\n      id,\n      channel: clipInfo?.author_name ?? 'YouTube',\n      thumbnailUrl: clipInfo?.thumbnail_url ?? `https://i.ytimg.com/vi/${id}/hqdefault.jpg`,\n      provider: 'youtube',\n      title: clipInfo?.title ?? id,\n      startTime: startTime?.replace(/[^0-9]/g, ''),\n    };\n  } catch {}\n};\n\nconst YouTubeProvider: Provider = {\n  canHandle,\n  tryGetClip,\n};\n\nexport default YouTubeProvider;\n","import { Clip } from '../models';\nimport TwitchClipProvider from './providers/twitch-clip';\nimport TwitchVodProvider from './providers/twitch-vod';\nimport YouTubeProvider from './providers/youtube';\n\nconst providers = [TwitchClipProvider, TwitchVodProvider, YouTubeProvider];\n\nconst findByUrl = async (url: string): Promise<Clip | undefined> => {\n  for (const provider of providers) {\n    if (!provider.canHandle(url)) {\n      continue;\n    }\n\n    const clip = await provider.tryGetClip(url);\n\n    if (clip) {\n      clip.hash = Date.now().toString();\n      return clip;\n    }\n  }\n\n  return undefined;\n};\n\nconst ClipFinder = {\n  findByUrl,\n};\n\nexport default ClipFinder;\n","import { createState, none } from '@hookstate/core';\nimport { trace } from '../common/analytics';\nimport { Clip, ClipSubmitter } from '../models';\nimport { createPersistentState, same } from './helpers';\n\nexport const currentClip = createState({} as Clip);\nexport const clipQueue = createPersistentState('clipQueue', [] as Clip[]);\nexport const clipMemory = createPersistentState('clipMemory', [] as Clip[]);\nexport const acceptingClips = createState(false);\n\nexport const addClip = (clip: Clip): void => {\n  const queuedState = clipQueue.find((c) => same(c.get(), clip));\n  const queued = queuedState?.get();\n\n  if (queued) {\n    const sameSubmitter =\n      queued.submitter?.userName === clip.submitter?.userName ||\n      (queued.submitters?.find((s) => s.userName === clip.submitter?.userName) ?? false);\n\n    if (!sameSubmitter) {\n      queuedState?.submitters.set((submitters) => [...(submitters ?? []), clip.submitter as ClipSubmitter]);\n      clipQueue.set((queue) => queue.sort((a, b) => (b.submitters?.length ?? 0) - (a.submitters?.length ?? 0)));\n    }\n\n    return;\n  } else if (getMemorizedClip(clip)) {\n    return;\n  }\n\n  clipMemory.set((memory) => [...(memory ?? []), clip]);\n  clipQueue.set((queue) => [...(queue ?? []), clip]);\n\n  trace('clip-added');\n};\n\nexport const nextClip = (): void => {\n  currentClip.set(JSON.parse(JSON.stringify(clipQueue[0]?.get() ?? {})));\n  clipQueue[0].set(none);\n\n  trace('next-clip');\n};\n\nexport const getMemorizedClip = (clip: Clip): Clip | undefined => {\n  const memory = clipMemory.find((c) => same(c.get(), clip));\n  return memory?.get();\n};\n\nexport const getQueuedClip = (clip: Clip): Clip | undefined => {\n  const queue = clipQueue.find((c) => same(c.get(), clip));\n  return queue?.get();\n};\n\nexport const selectCurrentClip = (clip: Clip): void => {\n  const queued = getQueuedClip(clip);\n  if (queued) {\n    currentClip.set(JSON.parse(JSON.stringify(queued)));\n    removeClip(queued);\n  }\n};\n\nexport const removeClip = (clip: Clip): void => {\n  const index = clipQueue.findIndex((c) => same(c.get(), clip));\n  clipQueue[index].set(none);\n};\n\nexport const clearQueue = (): void => {\n  clipQueue.set([]);\n  currentClip.set({});\n\n  trace('clear-queue');\n};\n\nexport const clearMemory = (): void => {\n  clipMemory.set([...(clipQueue.get() ?? [])]);\n\n  trace('purge-memory');\n};\n\nexport const acceptClips = (accept: boolean): void => {\n  acceptingClips.set(accept);\n\n  trace(`accept-clips-${accept}`);\n};\n\nexport const reloadClip = (): void => {\n  currentClip.hash.set(() => Date.now().toString());\n};\n","import React from 'react';\n\ninterface ForkMeOnGithubProps {\n  href: string;\n}\n\nfunction ForkMeOnGithub({ href }: ForkMeOnGithubProps) {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noreferrer\">\n      <img\n        loading=\"lazy\"\n        width=\"128\"\n        height=\"128\"\n        src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149\"\n        className=\"absolute top-0 right-0 fork-on-github\"\n        alt=\"Fork me on GitHub\"\n      />\n    </a>\n  );\n}\n\nexport default ForkMeOnGithub;\n","import { useState } from '@hookstate/core';\nimport React from 'react';\nimport { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../store/user';\n\nconst HomePage = React.lazy(() => import('./Home/HomePage'));\nconst QueuePage = React.lazy(() => import('./Queue/QueuePage'));\n\nfunction Routes() {\n  const loggedIn = useState(isLoggedIn).get();\n\n  return (\n    <Suspense fallback={<div></div>}>\n      <Router basename={process.env.REACT_APP_BASEPATH}>\n        <Switch>\n          <Route path=\"/queue\">\n            {loggedIn ? <QueuePage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact={true} path=\"/\">\n            {!loggedIn ? <HomePage /> : <Redirect to=\"/queue\" />}\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ForkMeOnGithub from './components/ForkMeOnGithub';\nimport Routes from './pages/Routes';\n\n\nfunction App() {\n  return (\n    <>\n      <ForkMeOnGithub href=\"https://github.com/JakeMiki/twitch-clip-queue\" />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport TwitchAuth from \"./services/TwitchAuth\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nTwitchAuth.processAuth();\r\n"],"sourceRoot":""}